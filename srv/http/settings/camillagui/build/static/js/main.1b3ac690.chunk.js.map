{"version":3,"sources":["sidepanel/camilladsp.svg","utilities/common-tsx.tsx","config.ts","utilities/errors.ts","filterstab.tsx","devicestab.tsx","mixerstab.tsx","pipeline/pipelineplotter.tsx","utilities/dragndrop.tsx","pipeline/pipelinetab.tsx","files.tsx","sidepanel/vumeter.tsx","sidepanel/volumebox.tsx","sidepanel/sidepanel.tsx","index.tsx","guiconfig.ts"],"names":["module","exports","modifiedCopyOf","object","modification","copy","cloneDeep","sortedAlphabetically","array","sort","a","b","localeCompare","moveItemUp","index","moveItem","moveItemDown","fromIndex","toIndex","removed","splice","cssStyles","getComputedStyle","document","body","download","filename","blob","createElement","href","URL","createObjectURL","hidden","appendChild","innerHTML","click","doUpload","type","event","onSuccess","onError","formData","FormData","files","target","uploadedFiles","length","file","push","name","append","value","fetch","method","message","Box","props","className","style","display","flexDirection","alignItems","title","children","CheckBox","tooltip","checked","onChange","data-tip","e","Button","onClick","text","AddButton","Object","assign","color","MdiButton","icon","mdiPlusThick","DeleteButton","smallButton","mdiDelete","PlotButton","mdiChartBellCurveCumulative","UploadButton","verticalAlign","multiple","enabled","clickhandler","undefined","buttonClass","path","size","MdiIcon","CloseButton","textAlign","cursor","OptionLine","settingStyle","small","width","desc","IntOption","IntInput","error","ERROR_BACKGROUND_STYLE","ErrorMessage","min","max","asString","int","toString","parseValue","rawValue","parsedvalue","parseInt","isNaN","FloatOption","FloatInput","float","parseFloat","FloatListOption","join","values","split","tempvalue","ParsedInput","updateValue","bind","state","prevProps","this","setState","parsed","valid","withControls","React","Component","freeze","backgroundColor","whiteSpace","BoolOption","marginLeft","marginTop","marginBottom","EnumOption","EnumInput","options","optionsMap","Array","isArray","map","forEach","toMap","keys","includes","id","key","TextOption","TextInput","ChartPopup","make_pointlist","xvect","yvect","scaling_x","scaling_y","x","idx","y","stateData","data","labels","hasOwnProperty","datasets","x_time","x_freq","y_phase","y_gain","y_ampl","styles","axesColor","getPropertyValue","textColor","gainColor","phaseColor","impulseColor","gainpoints","label","fill","borderColor","pointRadius","showLine","yAxisID","xAxisID","phasepoints","impulsepoints","scales","xAxes","yAxes","legend","fontColor","position","scaleLabel","labelString","gridLines","zeroLineColor","ticks","maxRotation","callback","afterBuildTicks","chartObj","suggestedMin","suggestedMax","open","onClose","ListSelectPopup","items","onSelect","closeOnDocumentClick","contentStyle","header","item","justifyContent","selectItem","filterNamesOf","configOrFilters","filters","isConfig","maybeConfig","devices","newName","prefix","existingNames","i","mixerNamesOf","configOrMixers","mixers","defaultMapping","outChannels","mappings","Error","dest","sources","defaultSource","mute","inChannels","channel","gain","inverted","defaultFilterStep","config","filterNames","names","ResamplerTypes","Formats","noErrors","errorsOf","errorList","p","filter","includeChildren","l","startsWith","a1","a2","equals","entry","errorsForSubpath","errors","concat","FiltersTab","addFilter","removeFilter","renameFilter","isFreeFilterName","updateFilter","plotFilter","closePopup","updateAvailableCoeffFiles","popupVisible","filterKeys","availableCoeffFiles","updateConfig","newFilter","oldState","newState","Math","parameters","q","freq","pipeline","step","filterName","oldName","update","headers","JSON","stringify","samplerate","channels","then","result","json","console","log","coeffFiles","rename","remove","plot","coeffDir","isConvolutionFileFilter","FilterView","uploadCoeffs","pickFilterFile","updateDefaults","updateFilterParamsWithDefaults","popupOpen","showDefaults","filterDefaults","filesnames","uploadState","success","selectedFilename","coeffFileNameUpdate","coeffFilePath","encodeURIComponent","response","defaults","subtype","guiDefaults","defaultParameters","uploadIcon","mdiUpload","mdiAlertCircle","errorMessage","trim","isValidFilterName","mdiFileSearch","setShowDefaults","margin","Biquad","Lowpass","Highpass","Lowshelf","slope","Highshelf","LowpassFO","HighpassFO","LowshelfFO","HighshelfFO","Peaking","Notch","Bandpass","Allpass","AllpassFO","LinkwitzTransform","q_act","q_target","freq_act","freq_target","Free","b0","b1","b2","BiquadCombo","ButterworthLowpass","order","ButterworthHighpass","LinkwitzRileyLowpass","LinkwitzRileyHighpass","Conv","Raw","format","skip_bytes_lines","read_bytes_lines","Wav","Values","Delay","Default","delay","unit","subsample","Gain","Volume","ramp_time","Loudness","reference_level","high_boost","low_boost","DiffEq","Dither","Simple","bits","Uniform","amplitude","Lipshitz441","Fweighted441","Shibata441","Shibata48","None","hiddenParameters","FilterParams","parameterInfos","bandwidth","qBandwithSlope","qAndBandwidthFilters","qAndSlopeFilters","defaultParameterValues","onTypeChange","onSubtypeChange","renderFilterParams","hasHiddenDefaultValue","isHiddenDefaultValue","filenameField","QorBandwithOrSlope","subtypeDefaults","firstSubtypeOrDefault","oldFilename","subtypeOptions","parameter","info","commonProps","onDescChange","option","selectedFile","absolutePath","replace","coeffFileNameFromPath","some","descOptions","marginRight","DevicesTab","updateDevices","guiConfig","Samplerate","hide_capture_samplerate","BufferOptions","SilenceOptions","hide_silence","RateAdjustOptions","ResamplingOptions","RateMonitoringOptions","hide_rate_monitoring","CaptureOptions","hide_capture_device","capture","PlaybackOptions","hide_playback_device","playback","enable_resampling","SamplerateOption","extraPadding","defaultSampleRates","isNonDefaultSamplerate","padding","htmlFor","newSamplerate","chunksize","queuelimit","silence_threshold","silenceThreshold","silence_timeout","silenceTimeout","enable_rate_adjust","enableRateAdjust","adjust_period","adjustPeriod","target_level","targetLevel","enableResampling","resampler_type","resampler","capture_samplerate","captureSamplerate","rate_measure_interval","rateMeasureInterval","stop_on_rate_change","stopOnRateChange","Alsa","device","retry_on_error","avoid_blocking_read","CoreAudio","Pulse","Wasapi","exclusive","loopback","Jack","Stdin","extra_samples","skip_bytes","read_bytes","File","captureType","Stdout","playbackType","MixersTab","mixerNames","addMixer","renameMixer","removeMixer","isFreeMixerName","mixerKeys","newMixer","in","out","mapping","MixerView","mixer","updateMixer","isValidMixerName","channelsIn","channelsOut","MappingView","mappingUpdate","mdiVolumeOff","source","Fragment","SourceView","updateSource","flexGrow","mdiPlusMinusVariant","PipelinePopup","PipelinePlot","height","arrowColor","frameBgColor","blockBgColor","blockTextColor","node","createPipelinePlot","boxes","rect","stroke","angle","output","input","links","newlink","atan","conf","max_v","stages","active_channels","capturename","deviceText","appendFrame","n","io_points","appendBlock","total_length","stage_start","mixername","mixconf","mixerchannels","m","dest_ch","src","src_ch","srclen","src_p","dest_p","appendLink","ch_nbr","ch_step","src_list","playbackchannels","max_h","playbackname","makeShapes","yScale","d3","domain","range","xScale","linkGen","d","arrowPoints","markerBoxHeight","attr","selectAll","enter","ref","viewBox","DndContainer","DndProvider","backend","HTML5Backend","useDndSort","itemType","itemPosition","moveItemFrom","useDrag","dropEffect","collect","monitor","isDragging","drag","preview","useDrop","accept","canDrop","isOver","isEqual","getItem","drop","DndSortable","DragHandle","mdiDrag","PipelineTab","updatePipeline","addStep","removeStep","setStepType","defaultMixerStep","plotFilterStep","moveStepUp","moveStepDown","plotPipeline","stepErrors","typeSelect","controls","mdiArrowUpBold","mdiArrowDownBold","FilterStepView","stepIndex","filterStep","MixerStepView","mixerStep","usePipelineStepDndSort","from","to","nameError","dndProps","moveFilter","fromStep","toStep","FilterStepFilter","setName","moveFilterUp","moveFilterDown","Files","currentConfigFile","setCurrentConfig","FileTable","canLoadAndSave","loadActiveConfig","setActiveConfig","toggleAllFileSelection","toggleFileSelection","areAllFilesSelected","upload","delete","downloadAsZip","overwriteConfig","saveConfig","loadConfig","showErrorMessage","selectedFiles","Set","activeConfigFileName","newFileName","fileStatus","stopTimer","ReactTooltip","rebuild","timerId","setInterval","clearInterval","prevState","intersect","window","confirm","zipFile","action","statusText","ok","jsonConfig","configFileName","newSelection","selection","has","add","isSuperset","gridTemplateColumns","gap","FileCheckBox","DownloadFilesAsZipButton","DeleteFilesButton","UploadFilesButton","FileStatusMessage","flatMap","SetActiveButton","active","SaveButton","LoadButton","gridColumn","FileDownloadButton","isCurrentConfig","disableReason","reasonToDisableSaveNewFileButton","fileOrFiles","mdiDownload","isEmpty","mdiAlphaABox","mdiAlphaABoxOutline","saveIcon","mdiContentSave","mdiCheck","loadIcon","mdiRefresh","classNames","rel","isValidFilename","VuMeterGroup","level","meters","VuMeter","clipped","percent","strokeWidth","trailWidth","strokeColor","strokeLinecap","trailColor","VolumeBox","dim","volume","updateVolume","vol_req","snapshot","setVolume","setMessage","mdiVolumeMedium","minVolume","capture_rms","valueAsNumber","playback_rms","SidePanel","offline_states","clearTimer","msg","capturesignalrms","playbacksignalrms","cdsp_status","rateadjust","capturerate","bufferlevel","clippedsamples","cdsp_version","py_cdsp_version","backend_version","timer","fetchConfig","applyConfig","intervalId","loadCurrentConfig","status","conf_req","setConfig","reply","activeConfigFile","cdsp_state","camillalogo","alt","overflowWrap","setErrors","ConfigCheckMessage","default_message","get_config_errors","request","globalErrors","CamillaConfig","handleConfig","switchTab","activetab","coeff_dir","newConfig","multiline","selectedIndex","ErrorIcon","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1b3ac690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camilladsp.95719842.svg\";","import React, {ChangeEvent, CSSProperties, ReactNode} from \"react\"\nimport Icon from \"@mdi/react\"\nimport Popup from \"reactjs-popup\"\nimport {Scatter} from \"react-chartjs-2\"\nimport {mdiChartBellCurveCumulative, mdiDelete, mdiPlusThick} from \"@mdi/js\"\nimport 'reactjs-popup/dist/index.css'\nimport cloneDeep from \"lodash/cloneDeep\"\n\nexport interface Update<T> {\n    (value: T): void\n}\n\nexport function modifiedCopyOf<T>(object: T, modification: (copy: T) => void): T {\n    const copy = cloneDeep(object)\n    modification(copy)\n    return copy\n}\n\nexport function sortedAlphabetically(array: string[]): string[] {\n    array.sort((a,b) => a.localeCompare(b))\n    return array\n}\n\nexport function moveItemUp<T>(array: T[], index: number) {\n    moveItem(array, index, index-1)\n}\n\nexport function moveItemDown<T>(array: T[], index: number) {\n    moveItem(array, index, index+1)\n}\n\nexport function moveItem<T>(array: T[], fromIndex: number, toIndex: number) {\n    const removed = array.splice(fromIndex, 1)\n    array.splice(toIndex, 0, ...removed)\n}\n\nexport function toMap<T extends string>(array: T[]): { [key: string]: T } {\n    const map: { [key: string]: T } = {}\n    array.forEach(value => map[value] = value)\n    return map\n}\n\nexport function cssStyles(): CSSStyleDeclaration {\n    return getComputedStyle(document.body)\n}\n\nexport function download(filename: string, blob: any) {\n    let a = document.createElement(\"a\")\n    a.href = URL.createObjectURL(blob)\n    a.download = filename\n    a.hidden = true\n    document.body.appendChild(a)\n    a.innerHTML = \"abcdefg\"\n    a.click()\n}\n\nexport async function doUpload(\n    type: 'config' | 'coeff',\n    event: ChangeEvent<HTMLInputElement>,\n    onSuccess: (filesnames: string[]) => void,\n    onError: (message: string) => void\n) {\n    const formData = new FormData()\n    const files = event.target.files as FileList\n    const uploadedFiles: string[] = []\n    for (let index = 0; index < files.length; index++) {\n        const file = files[index]\n        uploadedFiles.push(file.name)\n        formData.append(\"file\"+index, file, file.name)\n    }\n    event.target.value = '' // this resets the upload field, so the same file can be uploaded twice in a row\n    try {\n        await fetch(`/api/upload${type}s`, {\n            method: \"POST\",\n            body: formData\n        })\n        onSuccess(uploadedFiles)\n    } catch (e) {\n        onError(e.message)\n    }\n}\n\n\nexport function Box(props: {\n    title: string | ReactNode\n    style?: CSSProperties\n    children: ReactNode\n}) {\n    return (\n        <fieldset className=\"box\" style={props.style}>\n            <legend>\n                <div className=\"horizontally-spaced-content\" style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n                    {props.title}\n                </div>\n            </legend>\n            {props.children}\n        </fieldset>\n    )\n}\n\nexport function CheckBox(props: {\n    tooltip: string,\n    checked: boolean,\n    onChange: (checked: boolean) => void,\n    style?: CSSProperties\n}) {\n    const {tooltip, checked, onChange, style} = props\n    return <label data-tip={tooltip} className='checkbox-area' style={style}>\n        <input\n            type=\"checkbox\"\n            data-tip={tooltip}\n            checked={checked}\n            onChange={(e) => onChange(e.target.checked)}/>\n    </label>\n}\n\nexport function Button(props: {\n    text: string\n    \"data-tip\"? : string\n    onClick: () => void\n    style?: CSSProperties\n}) {\n    return <div\n        data-tip={props[\"data-tip\"]}\n        className=\"button button-with-text\"\n        style={props.style}\n        onClick={props.onClick}>\n        {props.text}\n    </div>\n}\n\nexport function AddButton(props: {\n    tooltip: string\n    style?: CSSProperties\n    onClick: () => void\n}) {\n    const style = Object.assign({color: 'var(--button-add-icon-color)'}, props.style)\n    return <MdiButton\n        icon={mdiPlusThick}\n        style={style}\n        tooltip={props.tooltip}\n        onClick={props.onClick}/>\n}\n\nexport function DeleteButton(props: {\n    tooltip: string\n    onClick: () => void\n    smallButton?: boolean\n}) {\n    return <MdiButton\n        style={{color: 'var(--button-remove-icon-color)'}}\n        smallButton={props.smallButton}\n        icon={mdiDelete}\n        tooltip={props.tooltip}\n        onClick={props.onClick}/>\n}\n\nexport function PlotButton(props: {\n    tooltip: string\n    onClick: () => void\n}) {\n    return <MdiButton\n        icon={mdiChartBellCurveCumulative}\n        tooltip={props.tooltip}\n        onClick={props.onClick}/>\n}\n\nexport function UploadButton(props: {\n    icon: string\n    tooltip: string\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n    multiple?: boolean\n    className?: string\n    style?: CSSProperties\n    smallButton?: boolean\n}): JSX.Element {\n    const style = Object.assign({verticalAlign: 'bottom'}, props.style)\n    return (\n        <label data-tip={props.tooltip}>\n            <input style={{display: 'none'}} type=\"file\" onChange={props.onChange} multiple={props.multiple}/>\n            <MdiButton\n                smallButton={props.smallButton}\n                icon={props.icon}\n                tooltip={props.tooltip}\n                className={props.className}\n                style={style}/>\n        </label>\n    )\n}\n\nexport function MdiButton(props: {\n    icon: string\n    tooltip: string\n    className?: string\n    style?: CSSProperties\n    enabled?: boolean\n    smallButton?: boolean\n    onClick?: () => void\n}) {\n    const { icon, tooltip, className, enabled, onClick, smallButton } = props\n    const clickhandler = onClick === undefined || enabled === false ? () => {} : onClick\n    let buttonClass = 'button button-with-icon'\n    if (enabled === false) buttonClass += ' disabled-button'\n    if (smallButton === true) buttonClass += ' smallbutton'\n    if (className !== undefined) buttonClass += ' ' + className\n    return <div onClick={clickhandler} data-tip={tooltip} className={buttonClass} style={props.style}>\n        <Icon path={icon} size={'24px'}/>\n    </div>\n}\n\nexport function MdiIcon(props: {\n    icon: string\n    tooltip: string\n    style?: CSSProperties\n}) {\n    return <span data-tip={props.tooltip} style={props.style}>\n        <Icon path={props.icon} size={'15px'}/>\n    </span>\n}\n\nexport function CloseButton(props: {\n    onClick: () => void\n}) {\n    return <div style={{textAlign: 'right', cursor: 'pointer'}} onClick={props.onClick}>✖</div>\n}\n\nexport function OptionLine(props: {\n    desc: string\n    'data-tip': string\n    children: ReactNode\n    small?: boolean\n}) {\n    const settingStyle = props.small ? {width:'min-content'} : {}\n    return <label className=\"setting\" data-tip={props['data-tip']} style={settingStyle}>\n        <span className=\"setting-label\">{props.desc}</span>\n        {props.children}\n    </label>\n}\n\nexport function IntOption(props:{\n    value: number\n    error?: string\n    desc: string\n    'data-tip': string\n    onChange: (value: number) => void\n    small?: boolean\n    withControls?: boolean\n    min?: number\n    max?: number\n}) {\n    const small = props.small\n    return <>\n        <OptionLine desc={props.desc} data-tip={props[\"data-tip\"]} small={small}>\n            <IntInput\n                {...props}\n                className={'setting-input' + (small ? ' small-setting-input' : '')}\n                style={props.error ? ERROR_BACKGROUND_STYLE : undefined}/>\n        </OptionLine>\n        <ErrorMessage message={props.error}/>\n    </>\n}\n\nexport function IntInput(props: {\n    value: number\n    'data-tip': string\n    onChange: (value: number) => void\n    withControls?: boolean\n    min?: number\n    max?: number\n    className?: string\n    style?: CSSProperties\n}) {\n    const {min, max} = props\n    return <ParsedInput\n        {...props}\n        asString={(int: number) => int.toString()}\n        parseValue={(rawValue: string) => {\n            const parsedvalue = parseInt(rawValue)\n            if (isNaN(parsedvalue)\n                || (min !== undefined && parsedvalue < min)\n                || (max !== undefined && parsedvalue > max))\n                return undefined\n            else\n                return parsedvalue\n        }}\n    />\n}\n\nexport function FloatOption(props:{\n    value: number\n    error?: string\n    desc: string\n    'data-tip': string\n    onChange: (value: number) => void\n}) {\n    return <>\n        <OptionLine desc={props.desc} data-tip={props[\"data-tip\"]}>\n          <FloatInput\n              value={props.value}\n              data-tip={props[\"data-tip\"]}\n              onChange={props.onChange}\n              className=\"setting-input\"/>\n        </OptionLine>\n        <ErrorMessage message={props.error}/>\n    </>\n}\n\nexport function FloatInput(props: {\n    value: number\n    error?: boolean\n    'data-tip': string\n    onChange: (value: number) => void\n    className?: string\n    style?: CSSProperties\n}) {\n    return <ParsedInput\n        value={props.value}\n        data-tip={props[\"data-tip\"]}\n        onChange={props.onChange}\n        asString={(float: number) => float.toString()}\n        parseValue={(rawValue: string) => {\n            const parsedvalue = parseFloat(rawValue)\n            return isNaN(parsedvalue) ? undefined : parsedvalue\n        }}\n        className={props.className}\n        style={{...props.style, ...(props.error ? ERROR_BACKGROUND_STYLE : undefined)}}\n    />\n}\n\nexport function FloatListOption(props: {\n    value: number[]\n    error?: string\n    desc: string\n    'data-tip': string\n    onChange: (value: number[]) => void\n}) {\n    return <>\n        <OptionLine desc={props.desc} data-tip={props['data-tip']}>\n            <ParsedInput\n                className=\"setting-input\"\n                value={props.value}\n                data-tip={props['data-tip']}\n                asString={(value: number[]) => value.join(\", \")}\n                parseValue={(rawValue: string) => {\n                    const parsedvalue = []\n                    const values = rawValue.split(\",\")\n                    for (let value of values) {\n                        const tempvalue = parseFloat(value)\n                        if (isNaN(tempvalue))\n                            return undefined\n                        parsedvalue.push(tempvalue)\n                    }\n                    return parsedvalue\n                }}\n                onChange={props.onChange}\n                style={props.error ? ERROR_BACKGROUND_STYLE : undefined}\n            />\n        </OptionLine>\n        <ErrorMessage message={props.error}/>\n    </>\n}\n\ntype ParsedInputProps<TYPE> = {\n    style?: CSSProperties\n    className?: string\n    value: TYPE\n    'data-tip': string\n    onChange: (value: TYPE) => void\n    asString: (value: TYPE) => string\n    parseValue: (rawValue: string) => TYPE | undefined\n    withControls?: boolean\n    min?: number\n    max?: number\n}\n\nexport class ParsedInput<TYPE> extends React.Component<ParsedInputProps<TYPE>, { rawValue: string }> {\n\n    constructor(props: ParsedInputProps<TYPE>) {\n        super(props)\n        this.updateValue = this.updateValue.bind(this)\n        this.state = { rawValue: props.asString(props.value) }\n    }\n\n    componentDidUpdate(prevProps: ParsedInputProps<TYPE>) {\n        if (prevProps.value !== this.props.value)\n            this.setState({rawValue: this.props.asString(this.props.value)})\n    }\n\n    private updateValue(rawValue: string) {\n        this.setState({rawValue})\n        const parsed = this.props.parseValue(rawValue)\n        if (parsed !== undefined)\n            this.props.onChange(parsed)\n    }\n\n    render() {\n        const props = this.props\n        const parsedValue = props.parseValue(this.state.rawValue)\n        const valid = parsedValue !== undefined\n        return <input\n            type={props.withControls ? \"number\" : \"text\"}\n            min={props.min}\n            max={props.max}\n            value={this.state.rawValue}\n            data-tip={props[\"data-tip\"]}\n            className={props.className}\n            style={valid ? props.style : {...props.style, ...ERROR_BACKGROUND_STYLE}}\n            onChange={e => this.updateValue(e.target.value)}/>\n    }\n\n}\n\nexport const ERROR_BACKGROUND_STYLE: CSSProperties =\n    Object.freeze({backgroundColor: 'var(--error-field-background-color)'})\n\nexport function ErrorMessage(props: {message?: string}) {\n    return props.message ?\n        <div style={{color: 'var(--error-text-color)', whiteSpace: 'pre-wrap'}}>{props.message}</div>\n        : null\n}\n\nexport function BoolOption(props: {\n    value: boolean\n    error?: string\n    desc: string\n    'data-tip': string\n    small?: boolean\n    onChange: (value: boolean) => void\n}) {\n    const small = props.small\n    return <>\n        <OptionLine desc={props.desc} data-tip={props[\"data-tip\"]} small={small}>\n            <div className={\"setting-input\" + (small ? \" small-setting-input\" : \"\")}\n                 data-tip={props[\"data-tip\"]}\n                 style={{cursor: 'pointer'}}>\n                <input\n                    style={{marginLeft: 0, marginTop: '8px', marginBottom: '8px'}}\n                    type=\"checkbox\"\n                    checked={props.value}\n                    data-tip={props[\"data-tip\"]}\n                    onChange={(e) => props.onChange(e.target.checked)}/>\n            </div>\n        </OptionLine>\n        <ErrorMessage message={props.error}/>\n    </>\n}\n\nexport function EnumOption<OPTION extends string>(props: {\n    value: OPTION\n    options: OPTION[]\n    error?: string\n    desc: string\n    'data-tip': string\n    className?: string\n    onChange: (value: OPTION) => void\n}) {\n    const className = 'setting-input' + (props.className ? ' ' + props.className : '')\n    return <>\n        <OptionLine desc={props.desc} data-tip={props[\"data-tip\"]}>\n            <EnumInput {...props} className={className} style={props.error ? ERROR_BACKGROUND_STYLE : undefined}/>\n        </OptionLine>\n        <ErrorMessage message={props.error}/>\n    </>\n}\n\n/*\n options - list of options OR object with value to display text mapping\n */\nexport function EnumInput<OPTION extends string>(props: {\n    value: OPTION\n    options: OPTION[] | { [key: string]: string }\n    desc: string\n    'data-tip': string\n    style?: CSSProperties\n    className?: string\n    onChange: (value: OPTION) => void\n}) {\n    const {options, value} = props\n    const optionsMap = Array.isArray(options) ? toMap(options) : options\n    if (!Object.keys(optionsMap).includes(value))\n        optionsMap[value] = value\n    return <select\n        id={props.desc}\n        name={props.desc}\n        value={value}\n        data-tip={props[\"data-tip\"]}\n        onChange={e => props.onChange(e.target.value as OPTION)}\n        style={props.style}\n        className={props.className}\n    >\n        {Object.keys(optionsMap).map(key => <option key={key} value={key}>{optionsMap[key]}</option>)}\n    </select>\n}\n\nexport function TextOption(props: {\n    value: string\n    error?: string\n    desc: string\n    'data-tip': string\n    onChange: (value: string) => void\n}) {\n    return <>\n        <OptionLine desc={props.desc} data-tip={props[\"data-tip\"]}>\n            <TextInput\n                className=\"setting-input\"\n                value={props.value}\n                data-tip={props[\"data-tip\"]}\n                style={props.error ? ERROR_BACKGROUND_STYLE : undefined}\n                onChange={props.onChange}/>\n        </OptionLine>\n        <ErrorMessage message={props.error}/>\n    </>\n}\n\nexport function TextInput(props: {\n    value: string,\n    'data-tip': string\n    className?: string\n    style?: CSSProperties\n    onChange: (value: string) => void\n}) {\n    return <input\n        type=\"text\"\n        value={props.value}\n        data-tip={props[\"data-tip\"]}\n        className={props.className}\n        style={props.style}\n        onChange={e => props.onChange(e.target.value)}/>\n}\n\nexport function ChartPopup(props: {\n    open: boolean,\n    data: any,\n    onClose: () => void\n}){\n    function make_pointlist(xvect: number[], yvect: number[], scaling_x: number, scaling_y: number) {\n        return xvect.map((x, idx) => ({x: scaling_x * x, y: scaling_y * yvect[idx]}))\n    }\n\n    let stateData = props.data\n    const name: string = stateData.hasOwnProperty(\"name\") ? stateData[\"name\"] : \"\"\n    let data: any = {labels: [name], datasets: []}\n    let x_time = false\n    let x_freq = false\n    let y_phase = false\n    let y_gain = false\n    let y_ampl = false\n\n    const styles = cssStyles()\n    const axesColor = styles.getPropertyValue('--axes-color')\n    const textColor = styles.getPropertyValue('--text-color')\n    const gainColor = styles.getPropertyValue('--gain-color')\n    const phaseColor = styles.getPropertyValue('--phase-color')\n    const impulseColor = styles.getPropertyValue('--impulse-color')\n    if (stateData.hasOwnProperty(\"magnitude\")) {\n        const gainpoints = make_pointlist(stateData[\"f\"], stateData[\"magnitude\"], 1.0, 1.0)\n        x_freq = true\n        y_gain = true\n        data.datasets.push(\n            {\n                label: 'Gain',\n                fill: false,\n                borderColor: gainColor,\n                pointRadius: 0,\n                showLine: true,\n                data: gainpoints,\n                yAxisID: \"gain\",\n                xAxisID: \"freq\",\n            }\n        )\n    }\n    if (stateData.hasOwnProperty(\"phase\")) {\n        const phasepoints = make_pointlist(stateData[\"f\"], stateData[\"phase\"], 1.0, 1.0)\n        x_freq = true\n        y_phase = true\n        data.datasets.push(\n            {\n                label: 'Phase',\n                fill: false,\n                borderColor: phaseColor,\n                pointRadius: 0,\n                showLine: true,\n                data: phasepoints,\n                yAxisID: \"phase\",\n                xAxisID: \"freq\",\n            }\n        )\n    }\n    if (stateData.hasOwnProperty(\"impulse\")) {\n        const impulsepoints = make_pointlist(stateData[\"time\"], stateData[\"impulse\"], 1000.0, 1.0)\n        x_time = true\n        y_ampl = true\n        data.datasets.push(\n            {\n                label: 'Impulse',\n                fill: false,\n                borderColor: impulseColor,\n                pointRadius: 0,\n                showLine: true,\n                data: impulsepoints,\n                yAxisID: \"ampl\",\n                xAxisID: \"time\",\n            }\n        )\n    }\n\n    const options = {\n        scales: {\n            xAxes: [] as any[],\n            yAxes: [] as any[]\n        },\n        legend: {\n            labels: {\n                fontColor: textColor,\n            }\n        },\n    }\n\n    if (x_freq) {\n        options.scales.xAxes.push(\n            {\n                id: \"freq\",\n                type: 'logarithmic',\n                position: 'bottom',\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Frequency, Hz',\n                    fontColor: textColor\n                },\n                gridLines: {\n                    zeroLineColor: axesColor,\n                    color: axesColor\n                },\n                ticks: {\n                    min: 0,\n                    max: 30000,\n                    maxRotation: 0,\n                    fontColor: textColor,\n                    callback(value: number, index: number, values: any) {\n                        if (value === 10 || value === 100)\n                            return value.toString()\n                        else if (value === 1000)\n                            return '1k'\n                        else if (value === 10000)\n                            return '10k'\n                        else\n                            return ''\n                    }\n                },\n                afterBuildTicks: function (chartObj: any) {\n                    chartObj.ticks = [\n                        10, 20, 30, 40, 50, 60, 70, 80, 90,\n                        100, 200, 300, 400, 500, 600, 700, 800, 900,\n                        1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000,\n                        10000, 20000\n                    ]\n                }\n            }\n        )\n    }\n    if (x_time) {\n        options.scales.xAxes.push(\n            {\n                id: \"time\",\n                type: 'linear',\n                position: 'top',\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Time, ms',\n                    fontColor: textColor\n                },\n                ticks: {\n                    fontColor: textColor,\n                },\n                gridLines: {display: false},\n            }\n        )\n    }\n    if (y_gain) {\n        options.scales.yAxes.push(\n            {\n                id: \"gain\",\n                type: 'linear',\n                position: 'left',\n                ticks: {\n                    fontColor: gainColor\n                },\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Gain, dB',\n                    fontColor: gainColor\n                },\n                gridLines: {\n                    zeroLineColor: axesColor,\n                    color: axesColor\n                },\n            },\n        )\n    }\n    if (y_phase) {\n        options.scales.yAxes.push(\n            {\n                id: \"phase\",\n                type: 'linear',\n                position: 'right',\n                ticks: {\n                    fontColor: phaseColor,\n                    suggestedMin: -180,\n                    suggestedMax: 180\n                },\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Phase, deg',\n                    fontColor: phaseColor\n                },\n                gridLines: {display: false}\n            },\n        )\n    }\n    if (y_ampl) {\n        options.scales.yAxes.push(\n            {\n                id: \"ampl\",\n                type: 'linear',\n                position: 'right',\n                ticks: {\n                    fontColor: impulseColor\n                },\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Amplitude',\n                    fontColor: impulseColor\n                },\n                gridLines: {display: false}\n            }\n        )\n    }\n\n    return <Popup open={props.open} onClose={props.onClose}>\n        <CloseButton onClick={props.onClose}/>\n        <Scatter data={data} options={options}/>\n    </Popup>\n}\n\nexport function ListSelectPopup(props: {\n    open: boolean\n    header?: ReactNode\n    items: string[]\n    onSelect: (value: string) => void\n    onClose: () => void\n}) {\n    const {open, items, onSelect, onClose} = props\n    const selectItem = (item: string) => { onSelect(item); onClose() }\n    return <Popup open={open} closeOnDocumentClick={true} onClose={onClose}  contentStyle={{width: 'max-content'}}>\n        <CloseButton onClick={onClose}/>\n        {props.header}\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            {items.map(item =>\n                <Button\n                    key={item}\n                    text={item}\n                    style={{justifyContent: 'flex-start'}}\n                    onClick={() => selectItem(item)}/>\n            )}\n        </div>\n    </Popup>\n}","import {sortedAlphabetically} from \"./utilities/common-tsx\"\n\nexport function defaultConfig(): Config {\n    return {\n        devices: {\n            samplerate: 48000,\n\n            //Buffers\n            chunksize: 1024,\n            queuelimit: 4,\n\n            //Silence\n            silence_threshold: 0,\n            silence_timeout: 0,\n\n            //Rate adjust\n            enable_rate_adjust: false,\n            adjust_period: 3,\n            target_level: 1024,\n\n            //Resampler\n            enable_resampling: true,\n            resampler_type: 'FastAsync',\n            capture_samplerate: 44100,\n\n            //Rate monitoring\n            stop_on_rate_change: false,\n            rate_measure_interval: 1.0,\n\n            capture: {type: 'Alsa', channels: 2, format: 'S32LE', device: 'hw:0', retry_on_error: false, avoid_blocking_read: false },\n            playback: {type: 'Alsa', channels: 2, format: 'S32LE', device: 'hw:0'},\n        },\n        filters: {},\n        mixers: {},\n        pipeline: [],\n    }\n}\n\nexport function filterNamesOf(configOrFilters: Config | Filters): string[] {\n    const filters: Filters = isConfig(configOrFilters) ? configOrFilters.filters : configOrFilters\n    return sortedAlphabetically(Object.keys(filters))\n}\n\nfunction isConfig(maybeConfig: Config | Filters | Mixers): maybeConfig is Config {\n    return maybeConfig.devices !== undefined\n}\n\nexport function newFilterName(filters: Filters): string {\n    return newName('New Filter ', filterNamesOf(filters))\n}\n\nfunction newName(prefix: string, existingNames: string[]): string {\n    const nameIsAlreadyPresent: (i: number) => boolean =\n        i => existingNames.includes(prefix + i.toString())\n    for (let i = 1; ; i++)\n        if (!nameIsAlreadyPresent(i))\n            return prefix + i.toString()\n}\n\nexport function defaultFilter() {\n    return {\n        type: \"Biquad\",\n        parameters: {type: \"Lowpass\", q: 0.5, freq: 1000},\n    }\n}\n\nexport function removeFilter(config: Config, name: string) {\n    delete config.filters[name]\n    for (let step of config.pipeline)\n        if (step.type === 'Filter')\n            step.names = step.names.filter(filterName => filterName !== name)\n}\n\nexport function renameFilter(config: Config, oldName: string, newName: string) {\n    if (filterNamesOf(config).includes(newName))\n        throw new Error(`Filter '${newName}' already exists`)\n    config.filters[newName] = config.filters[oldName]\n    delete config.filters[oldName]\n    for (let step of config.pipeline)\n        if (step.type === 'Filter')\n            for (let i = 0; i < step.names.length; i++)\n                if (step.names[i] === oldName)\n                    step.names[i] = newName\n}\n\nexport function mixerNamesOf(configOrMixers: Config | Mixers): string[] {\n    const mixers: Mixers = isConfig(configOrMixers) ? configOrMixers.mixers : configOrMixers\n    return sortedAlphabetically(Object.keys(mixers))\n}\n\nexport function newMixerName(mixers: Mixers): string {\n    return newName('New Mixer ', mixerNamesOf(mixers))\n}\n\nexport function removeMixer(config: Config, name: string) {\n    delete config.mixers[name]\n    const pipeline = config.pipeline\n    config.pipeline = pipeline.filter(step => step.type !== 'Mixer' || step.name !== name)\n}\n\nexport function renameMixer(config: Config, oldName: string, newName: string) {\n    if (mixerNamesOf(config).includes(newName))\n        throw new Error(`Mixer '${newName}' already exists`)\n    config.mixers[newName] = config.mixers[oldName]\n    delete config.mixers[oldName]\n    for (let step of config.pipeline)\n        if (step.type === 'Mixer' && step.name === oldName)\n            step.name = newName\n}\n\nexport function defaultMixer(): Mixer {\n    return {\n        channels: {in: 2, out: 2},\n        mapping: [defaultMapping(2, [])]\n    }\n}\n\nexport function defaultMapping(outChannels: number, mappings: Mapping[]): Mapping {\n    if (mappings.length >= outChannels)\n        throw new Error(`Cannot add more than ${outChannels} (out) mappings`)\n    return {\n        dest: mappings.length,\n        sources: [defaultSource(0, [])],\n        mute: false\n    }\n}\n\nexport function defaultSource(inChannels: number, sources: Source[]): Source {\n    const newChannel = sources.length < inChannels ? sources.length : 0\n    return {channel: newChannel, gain: 0, inverted: false, mute: false}\n}\n\nexport function defaultFilterStep(config: Config): FilterStep {\n    const filterNames = filterNamesOf(config)\n    return {\n        type: 'Filter',\n        channel: 0,\n        names: filterNames.length === 1 ? [filterNames[0]] : ['']\n    }\n}\n\nexport function defaultMixerStep(config: Config): MixerStep {\n    const mixerNames = mixerNamesOf(config)\n    return {\n        type: 'Mixer',\n        name: mixerNames.length === 1 ? mixerNames[0] : ''\n    }\n}\n\nexport interface Config {\n    devices: Devices,\n    filters: Filters,\n    mixers: Mixers,\n    pipeline: Pipeline,\n}\n\nexport interface Devices {\n    samplerate: number,\n\n    //Buffers\n    chunksize: number,\n    queuelimit: number,\n\n    //Silence\n    silence_threshold: number,\n    silence_timeout: number,\n\n    //Rate adjust\n    enable_rate_adjust: boolean,\n    adjust_period: number,\n    target_level: number,\n\n    //Resampler\n    enable_resampling: boolean,\n    resampler_type: ResamplerType,\n    capture_samplerate: number,\n\n    //Rate monitoring\n    stop_on_rate_change: boolean,\n    rate_measure_interval: number,\n\n    capture: CaptureDevice,\n    playback: PlaybackDevice,\n}\n\nexport type ResamplerType = 'FastAsync' | 'BalancedAsync' | 'AccurateAsync' | 'Synchronous'\nexport const ResamplerTypes: ResamplerType[] = [\"FastAsync\", \"BalancedAsync\", \"AccurateAsync\", \"Synchronous\"]\n\n\nexport type CaptureDevice =\n    { type: 'Alsa', channels: number, format: Format, device: string, retry_on_error: boolean, avoid_blocking_read: boolean }\n    | { type: 'Wasapi', channels: number, format: Format, device: string, exclusive: boolean, loopback: boolean }\n    | { type: 'Jack', channels: number, device: string }\n    | { type: 'CoreAudio' | 'Pulse', channels: number, format: Format, device: string }\n    | { type: 'File', channels: number, format: Format, filename: '/path/to/file',\n        extra_samples: number, skip_bytes: number, read_bytes: number }\n    | { type: 'Stdin', channels: number, format: Format,\n        extra_samples: number, skip_bytes: number, read_bytes: number }\n\nexport type PlaybackDevice =\n    { type: 'Wasapi', channels: number, format: Format, device: string, exclusive: boolean }\n    | { type: 'Jack', channels: number, device: string }\n    | { type: 'Alsa' | 'CoreAudio' | 'Pulse', channels: number, format: Format, device: string }\n    | { type: 'File', channels: number, format: Format, filename: string}\n    | { type: 'Stdout', channels: number, format: Format }\n\nexport type Format = 'S16LE' | 'S24LE' | 'S24LE3' | 'S32LE' | 'FLOAT32LE' | 'FLOAT64LE'\nexport const Formats: Format[] = ['S16LE', 'S24LE', 'S24LE3', 'S32LE', 'FLOAT32LE', 'FLOAT64LE']\n\nexport interface Filters {\n    [name: string] : Filter\n}\nexport interface Filter {\n    type: string\n    parameters: { [name: string]: any }\n}\n\nexport type Mixers = {\n    [name: string] : Mixer\n}\n\nexport interface Mixer {\n    channels: {\n        in: number\n        out: number\n    }\n    mapping: Mapping[]\n}\n\nexport interface Mapping {\n    dest: number\n    sources: Source[]\n    mute: boolean\n}\n\nexport interface Source {\n    channel: number\n    gain: number\n    inverted: boolean\n    mute: boolean\n}\n\nexport type Pipeline = PipelineStep[]\nexport type PipelineStep = MixerStep | FilterStep\nexport interface MixerStep { type: 'Mixer', name: string }\nexport interface FilterStep { type: 'Filter', channel: number, names: string[] }\n","export type Path = (string|number)[]\n\nexport interface ErrorsForPath{\n    (p: {path: Path, includeChildren?: boolean}): string | undefined\n}\n\nexport const noErrors: ErrorsForPath =\n    () => undefined\n\nexport function errorsOf(errorList: Array<[Path, string]>): ErrorsForPath {\n    return (p :{path: Path, includeChildren?: boolean}): string | undefined => {\n        const {path, includeChildren} = p\n        const filter = includeChildren ?\n            (item: Path) => startsWith(item, path)\n            : (item: Path) => equals(item, path)\n        const text = errorList\n            .filter(entry => filter(entry[0]))\n            .map(entry => entry[1])\n            .join('\\n')\n        return text.length > 0 ? text : undefined\n    }\n}\n\nfunction equals(a1: Path, a2: Path) {\n    if (a1.length !== a2.length)\n        return false\n    for (let i = 0, l=a2.length; i < l; i++)\n        if (a1[i] !== a2[i])\n            return false\n    return true\n}\n\nfunction startsWith(path: Path, prefix: Path) {\n    if (path.length < prefix.length)\n        return false\n    for (let i = 0, l=prefix.length; i < l; i++)\n        if (path[i] !== prefix[i])\n            return false\n    return true\n}\n\nexport function errorsForSubpath(errors: ErrorsForPath, ...prefix: Path): ErrorsForPath {\n    return (p :{path: Path, includeChildren?: boolean}): string | undefined => {\n        return errors({path: prefix.concat(p.path), includeChildren: p.includeChildren})\n    }\n}","import React from \"react\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport \"./index.css\"\nimport {mdiAlertCircle, mdiChartBellCurveCumulative, mdiFileSearch, mdiUpload} from '@mdi/js'\nimport {\n  Config,\n  defaultFilter,\n  Filter,\n  filterNamesOf,\n  Filters,\n  newFilterName,\n  removeFilter,\n  renameFilter\n} from \"./config\"\nimport {\n  AddButton,\n  BoolOption,\n  Box,\n  Button,\n  ChartPopup,\n  DeleteButton,\n  doUpload,\n  EnumInput,\n  EnumOption,\n  ErrorMessage,\n  FloatInput,\n  FloatListOption,\n  FloatOption,\n  IntOption,\n  ListSelectPopup,\n  MdiButton,\n  modifiedCopyOf,\n  ParsedInput,\n  TextOption,\n  Update,\n  UploadButton\n} from \"./utilities/common-tsx\"\nimport {ErrorsForPath, errorsForSubpath} from \"./utilities/errors\"\n\nexport class FiltersTab extends React.Component<\n    {\n      filters: Filters\n      samplerate: number\n      channels: number\n      coeffDir: string\n      updateConfig: (update: Update<Config>) => void\n      errors: ErrorsForPath\n    },\n    {\n      popupVisible: boolean\n      data: { name: string }\n      filterKeys: { [name: string]: number}\n      availableCoeffFiles: string[]\n    }\n> {\n  constructor(props: any) {\n    super(props)\n    this.filterNames = this.filterNames.bind(this)\n    this.addFilter = this.addFilter.bind(this)\n    this.removeFilter = this.removeFilter.bind(this)\n    this.renameFilter = this.renameFilter.bind(this)\n    this.isFreeFilterName = this.isFreeFilterName.bind(this)\n    this.updateFilter = this.updateFilter.bind(this)\n    this.plotFilter = this.plotFilter.bind(this)\n    this.closePopup = this.closePopup.bind(this)\n    this.updateAvailableCoeffFiles = this.updateAvailableCoeffFiles.bind(this)\n    this.state = {\n      popupVisible: false,\n      data: {name: \"\"},\n      filterKeys: {},\n      availableCoeffFiles: []\n    }\n    this.filterNames().forEach((name, i) => this.state.filterKeys[name] = i)\n    this.updateAvailableCoeffFiles()\n  }\n\n  private filterNames(): string[] {\n    return filterNamesOf(this.props.filters)\n  }\n\n  private addFilter() {\n    this.props.updateConfig(config => {\n      const newFilter = newFilterName(config.filters)\n      this.setState(oldState =>\n          modifiedCopyOf(oldState, newState =>\n              newState.filterKeys[newFilter] = 1 + Math.max(0, ...Object.values(oldState.filterKeys))\n          )\n      )\n      config.filters[newFilter] = defaultFilter()\n    })\n  }\n\n  private removeFilter(name: string) {\n    this.props.updateConfig(config => {\n      removeFilter(config, name)\n      this.setState(oldState =>\n          modifiedCopyOf(oldState, newState => delete newState.filterKeys[name]))\n    })\n  }\n\n  private renameFilter(oldName: string, newName: string) {\n    if (this.isFreeFilterName(newName))\n      this.props.updateConfig(config => {\n        this.setState(oldState =>\n            modifiedCopyOf(oldState, newState => {\n              newState.filterKeys[newName] = newState.filterKeys[oldName]\n              delete newState.filterKeys[oldName]\n            }))\n        renameFilter(config, oldName, newName)\n      })\n  }\n\n  private isFreeFilterName(name: string): boolean {\n    return !this.filterNames().includes(name)\n  }\n\n  private updateFilter(name: string, update: Update<Filter>) {\n    this.props.updateConfig(config => update(config.filters[name]))\n  }\n\n  private plotFilter(name: string) {\n    fetch(\"/api/evalfilter\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", },\n      body: JSON.stringify({\n        name: name,\n        config: this.props.filters[name],\n        samplerate: this.props.samplerate,\n        channels: this.props.channels,\n      }),\n    }).then(\n      result => result.json()\n          .then(data => this.setState({popupVisible: true, data: data})),\n      error => console.log(\"Failed\", error)\n    )\n  }\n\n  private closePopup() {\n    this.setState({ popupVisible: false })\n  }\n\n  private updateAvailableCoeffFiles() {\n    fetch(\"/api/storedcoeffs\")\n        .then(\n            result => result.json()\n                .then(coeffFiles => this.setState({availableCoeffFiles: coeffFiles})),\n            error => console.log(\"Could not load stored coeffs\", error)\n        )\n  }\n\n  render() {\n    let {filters, errors} = this.props\n    return <div className=\"tabpanel\">\n      <ErrorMessage message={errors({path: []})}/>\n      {this.filterNames()\n          .map(name =>\n              <FilterView\n                  key={this.state.filterKeys[name]}\n                  name={name}\n                  filter={filters[name]}\n                  errors={errorsForSubpath(errors, name)}\n                  availableCoeffFiles={this.state.availableCoeffFiles}\n                  updateFilter={update => this.updateFilter(name, update)}\n                  rename={newName => this.renameFilter(name, newName)}\n                  isFreeFilterName={this.isFreeFilterName}\n                  remove={() => this.removeFilter(name)}\n                  plot={() => this.plotFilter(name)}\n                  updateAvailableCoeffFiles={this.updateAvailableCoeffFiles}\n                  coeffDir={this.props.coeffDir}\n              />\n          )}\n      <AddButton tooltip=\"Add a new filter\" onClick={this.addFilter}/>\n      <ChartPopup\n        key={'plot-filter-popup'}\n        open={this.state.popupVisible}\n        data={this.state.data}\n        onClose={this.closePopup}\n      />\n    </div>\n  }\n}\n\nfunction isConvolutionFileFilter(filter: Filter): boolean {\n  return filter.type === 'Conv' && (filter.parameters.type === 'Raw' || filter.parameters.type === 'Wav')\n}\n\ninterface FilterDefaults {\n  type?: string\n  format?: string\n  skip_bytes_lines?: number\n  read_bytes_lines?: number\n  errors?: string[]\n}\n\nclass FilterView extends React.Component<{\n  name: string\n  filter: Filter\n  errors: ErrorsForPath\n  availableCoeffFiles: string[]\n  updateFilter: (update: Update<Filter>) => void\n  rename: (newName: string) => void\n  isFreeFilterName: (name: string) => boolean\n  remove: () => void\n  plot: () => void\n  updateAvailableCoeffFiles: () => void\n  coeffDir: string\n}, {\n  uploadState?: { success: true } | { success: false, message: string }\n  popupOpen: boolean\n  filterDefaults: FilterDefaults\n  showDefaults: boolean\n} > {\n\n  constructor(props: any) {\n    super(props)\n    this.uploadCoeffs = this.uploadCoeffs.bind(this)\n    this.pickFilterFile = this.pickFilterFile.bind(this)\n    this.updateDefaults = this.updateDefaults.bind(this)\n    this.updateFilterParamsWithDefaults = this.updateFilterParamsWithDefaults.bind(this)\n    this.state = {popupOpen: false, showDefaults: false, filterDefaults: {}}\n    if (isConvolutionFileFilter(this.props.filter))\n      this.updateDefaults(this.props.filter.parameters.filename)\n  }\n\n  private uploadCoeffs(e: React.ChangeEvent<HTMLInputElement>) {\n    doUpload('coeff', e,\n        filesnames => {\n          this.setState({uploadState: {success: true}})\n          const {updateAvailableCoeffFiles} = this.props\n          this.pickFilterFile(filesnames[0])\n          updateAvailableCoeffFiles()\n        },\n        message => this.setState({uploadState: {success: false, message: message}})\n    )\n  }\n\n  private pickFilterFile(selectedFilename: string) {\n    const {coeffDir, updateFilter} = this.props\n    updateFilter(coeffFileNameUpdate(coeffDir, selectedFilename))\n    this.updateDefaults(coeffFilePath(coeffDir, selectedFilename), true)\n  }\n\n  private updateDefaults(filename: string, updateFilter: boolean = false) {\n    const filter = this.props.filter\n    if (isConvolutionFileFilter(filter)) {\n      fetch(`/api/defaultsforcoeffs?file=${encodeURIComponent(filename)}`)\n          .then(response =>\n              response.json().then(json => {\n                const defaults = json as FilterDefaults\n                this.setState({filterDefaults: defaults, showDefaults: false})\n                if (updateFilter)\n                  this.updateFilterParamsWithDefaults(defaults)\n              })\n          )\n    }\n  }\n\n  private updateFilterParamsWithDefaults(defaults: FilterDefaults) {\n    this.props.updateFilter(filter => {\n      const subtype = defaults.type ? defaults.type : filter.parameters.type\n      const guiDefaults = defaultParameters[filter.type][subtype]\n      const channel = filter.parameters.channel\n      filter.parameters = {\n        ...guiDefaults,\n        ...defaults,\n        filename: filter.parameters.filename\n      }\n      if (channel) filter.parameters.channel = channel\n    })\n  }\n\n  render() {\n    const {name, filter} = this.props\n    const uploadState = this.state.uploadState\n    const isValidFilterName = (newName: string) =>\n        name === newName || (newName.trim().length > 0 && this.props.isFreeFilterName(newName))\n    let uploadIcon: { icon: string, className?: string, errorMessage?: string } =\n        {icon: mdiUpload}\n    if (uploadState !== undefined && !uploadState.success)\n      uploadIcon = {icon: mdiAlertCircle, className: 'error-text', errorMessage: uploadState.message}\n    return <Box title={\n      <ParsedInput\n          style={{width: '300px'}}\n          value={name}\n          asString={x => x}\n          parseValue={newName => isValidFilterName(newName) ? newName : undefined}\n          data-tip=\"Filter name, must be unique\"\n          onChange={newName => this.props.rename(newName)}\n      />\n    }>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n        <div\n            className=\"vertically-spaced-content\"\n            style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between'}}>\n          {['Biquad', 'BiquadCombo', 'Conv', 'DiffEq'].includes(filter.type) &&\n          <MdiButton\n              icon={mdiChartBellCurveCumulative}\n              tooltip=\"Plot frequency response of this filter\"\n              onClick={this.props.plot}/>\n          }\n          {isConvolutionFileFilter(filter) &&\n          <MdiButton\n              icon={mdiFileSearch}\n              tooltip=\"Pick filter file\"\n              onClick={() => this.setState({popupOpen: true})}/>\n          }\n          <DeleteButton tooltip={\"Delete this filter\"} onClick={this.props.remove}/>\n        </div>\n        <FilterParams\n            filter={this.props.filter}\n            errors={this.props.errors}\n            updateFilter={this.props.updateFilter}\n            availableCoeffFiles={this.props.availableCoeffFiles}\n            coeffDir={this.props.coeffDir}\n            filterDefaults={this.state.filterDefaults}\n            showDefaults={this.state.showDefaults}\n            setShowDefaults={() => this.setState({showDefaults: true})}/>\n      </div>\n      <ListSelectPopup\n          key=\"filter select popup\"\n          open={this.state.popupOpen}\n          header={\n            <>\n              <UploadButton\n                  icon={uploadIcon.icon}\n                  className={uploadIcon.className}\n                  tooltip={uploadIcon.errorMessage ? uploadIcon.errorMessage : \"Upload filter files\"}\n                  onChange={this.uploadCoeffs}\n                  multiple={true}/>\n              <div style={{margin: '10px 0'}}>For Raw filters, only single channel files are supported.</div>\n            </>\n          }\n          items={this.props.availableCoeffFiles}\n          onClose={() => this.setState({popupOpen: false})}\n          onSelect={this.pickFilterFile}\n      />\n    </Box>\n  }\n}\n\nfunction coeffFileNameFromPath(coeffDir: string, absolutePath: string): string {\n  return absolutePath.replace(coeffDir, '')\n}\n\nfunction coeffFilePath(coeffDir: string, filename: string) {\n  return coeffDir + filename\n}\n\nfunction coeffFileNameUpdate(coeffDir: string, filename: string): Update<Filter> {\n  return filter => filter.parameters.filename = coeffFilePath(coeffDir, filename)\n}\n\nconst defaultParameters: {\n  [type: string]: {\n    [subtype: string]: {\n      [parameter: string]: string | number | number[] | boolean\n    }\n  }\n} = {\n  Biquad: {\n    Lowpass: { type: \"Lowpass\", freq: 1000, q: 0.5 },\n    Highpass: { type: \"Highpass\", freq: 1000, q: 0.5 },\n    Lowshelf: { type: \"Lowshelf\", gain: 6, freq: 1000, slope: 6 },\n    Highshelf: { type: \"Highshelf\", gain: 6, freq: 1000, slope: 6 },\n    LowpassFO: { type: \"LowpassFO\", freq: 1000 },\n    HighpassFO: { type: \"HighpassFO\", freq: 1000 },\n    LowshelfFO: { type: \"LowshelfFO\", gain: 6, freq: 1000 },\n    HighshelfFO: { type: \"HighshelfFO\", gain: 6, freq: 1000 },\n    Peaking: { type: \"Peaking\", gain: 6, freq: 1000, q: 1.5 },\n    Notch: { type: \"Notch\", freq: 1000, q: 1.5 },\n    Bandpass: { type: \"Bandpass\", freq: 1000, q: 0.5 },\n    Allpass: { type: \"Allpass\", freq: 1000, q: 0.5 },\n    AllpassFO: { type: \"AllpassFO\", freq: 1000 },\n    LinkwitzTransform: { type: \"LinkwitzTransform\", q_act: 1.5, q_target: 0.5, freq_act: 50, freq_target: 25 },\n    Free: { type: \"Free\", a1: 0.0, a2: 0.0, b0: -1.0, b1: 1.0, b2: 0.0 },\n  },\n  BiquadCombo: {\n    ButterworthLowpass: { type: \"ButterworthLowpass\", order: 2, freq: 1000 },\n    ButterworthHighpass: { type: \"ButterworthHighpass\", order: 2, freq: 1000 },\n    LinkwitzRileyLowpass: { type: \"LinkwitzRileyLowpass\", order: 2, freq: 1000 },\n    LinkwitzRileyHighpass: { type: \"LinkwitzRileyHighpass\", order: 2, freq: 1000 },\n  },\n  Conv: {\n    Raw: { type: \"Raw\", filename: \"\", format: \"TEXT\", skip_bytes_lines: 0, read_bytes_lines: 0 },\n    Wav: { type: \"Wav\", filename: \"\", channel: 0 },\n    Values: { type: \"Values\", values: [1.0, 0.0, 0.0, 0.0], length: 0 },\n  },\n  Delay: {\n    Default: { delay: 0.0, unit: \"ms\", subsample: false },\n  },\n  Gain: {\n    Default: { gain: 0.0, inverted: false, mute: false },\n  },\n  Volume: {\n    Default: { ramp_time: 200 },\n  },\n  Loudness: {\n    Default: { reference_level: 0.0, high_boost: 5, low_boost: 5, ramp_time: 200 },\n  },\n  DiffEq: {\n    Default: { a: [1.0, 0.0], b: [1.0, 0.0] },\n  },\n  Dither: {\n    Simple: { type: \"Simple\", bits: 16 },\n    Uniform: { type: \"Uniform\", bits: 16, amplitude: 1.0 },\n    Lipshitz441: { type: \"Lipshitz441\", bits: 16 },\n    Fweighted441: { type: \"Fweighted441\", bits: 16 },\n    Shibata441: { type: \"Shibata441\", bits: 16 },\n    Shibata48: { type: \"Shibata48\", bits: 16 },\n    None: { type: \"None\", bits: 16 },\n  },\n}\n\nconst hiddenParameters = ['skip_bytes_lines', 'read_bytes_lines']\n\nclass FilterParams extends React.Component<{\n  filter: Filter\n  errors: ErrorsForPath\n  updateFilter: (update: Update<Filter>) => void\n  availableCoeffFiles: string[]\n  coeffDir: string\n  filterDefaults: FilterDefaults\n  setShowDefaults: () => void\n  showDefaults: boolean\n}, unknown> {\n  constructor(props: any) {\n    super(props)\n    this.onTypeChange = this.onTypeChange.bind(this)\n    this.onSubtypeChange = this.onSubtypeChange.bind(this)\n    this.renderFilterParams = this.renderFilterParams.bind(this)\n    this.hasHiddenDefaultValue = this.hasHiddenDefaultValue.bind(this)\n    this.isHiddenDefaultValue = this.isHiddenDefaultValue.bind(this)\n    this.filenameField = this.filenameField.bind(this)\n    this.QorBandwithOrSlope = this.QorBandwithOrSlope.bind(this)\n  }\n\n  private onTypeChange(type: string) {\n    this.props.updateFilter(filter => {\n      filter.type = type\n      const subtypeDefaults = defaultParameters[type]\n      const firstSubtypeOrDefault = Object.keys(subtypeDefaults)[0]\n      filter.parameters = cloneDeep(subtypeDefaults[firstSubtypeOrDefault])\n    })\n  }\n\n  private onSubtypeChange(subtype: string) {\n    this.props.updateFilter(filter => {\n          const oldFilename = isConvolutionFileFilter(filter) ? filter.parameters.filename : undefined\n          filter.parameters = cloneDeep(defaultParameters[filter.type][subtype])\n          if (oldFilename && isConvolutionFileFilter(filter))\n            filter.parameters.filename = oldFilename //keep filename, if switch is between Raw and Wav\n        }\n    )\n  }\n\n  render() {\n    const {filter, errors} = this.props\n    const defaults = defaultParameters[filter.type]\n    const subtypeOptions = defaults ? Object.keys(defaults) : []\n    return <div style={{width: '100%', textAlign: 'right'}}>\n      <ErrorMessage message={errors({path: []})}/>\n      <EnumOption\n          value={filter.type}\n          error={errors({path: ['type']})}\n          options={Object.keys(defaultParameters)}\n          desc=\"type\"\n          data-tip=\"Filter type\"\n          onChange={this.onTypeChange}/>\n      {subtypeOptions[0] !== 'Default' &&\n      <EnumOption\n          value={filter.parameters.type}\n          error={errors({path: ['parameters', 'type']})}\n          options={subtypeOptions}\n          desc=\"subtype\"\n          data-tip=\"Filter subtype\"\n          onChange={this.onSubtypeChange}/>\n      }\n      <ErrorMessage message={errors({path: ['parameters']})}/>\n      {this.renderFilterParams(filter.parameters, errorsForSubpath(errors, 'parameters'))}\n      {isConvolutionFileFilter(this.props.filter) && !this.props.showDefaults && (this.hasHiddenDefaultValue()) &&\n      <Button text=\"...\" onClick={() => this.props.setShowDefaults()}/>\n      }\n    </div>\n  }\n\n  private renderFilterParams(parameters: { [p: string]: any }, errors: ErrorsForPath) {\n    return Object.keys(parameters).map(parameter => {\n      if (parameter === 'type') // 'type' is already rendered by parent component\n        return null\n      const info = this.parameterInfos[parameter]\n      if (info === undefined) {\n        console.log(`Rendering for filter parameter '${parameter}' is not implemented`)\n        return null\n      }\n      const commonProps = {\n        key: parameter,\n        value: parameters[parameter],\n        error: errors({path: [parameter]}),\n        desc: info.desc,\n        'data-tip': info.tooltip,\n        onChange: (value: any) => this.props.updateFilter(filter => filter.parameters[parameter] = value)\n      }\n      if (parameter === 'filename')\n        return this.filenameField(parameters['filename'], commonProps)\n      if (this.isHiddenDefaultValue(parameter))\n        return null\n      if ((this.qAndSlopeFilters.includes(parameters.type) || this.qAndBandwidthFilters.includes(parameters.type))\n          && (parameter === 'q' || parameter === 'slope' || parameter === 'bandwidth'))\n        return <this.QorBandwithOrSlope\n            {...commonProps}\n            parameter={parameter}\n            parameters={parameters}\n            onDescChange={option => this.props.updateFilter(filter => {\n              this.qBandwithSlope.forEach(parameter => { delete filter.parameters[parameter] })\n              filter.parameters[option] = this.defaultParameterValues[option]\n            })}/>\n      if (info.type === 'text')\n        return <TextOption {...commonProps}/>\n      if (info.type === 'int')\n        return <IntOption {...commonProps}/>\n      if (info.type === 'float')\n        return <FloatOption {...commonProps}/>\n      if (info.type === \"bool\")\n        return <BoolOption {...commonProps}/>\n      if (info.type === 'floatlist')\n        return <FloatListOption {...commonProps}/>\n      if (info.type === 'enum')\n        return <EnumOption {...commonProps} options={info.options}/>\n      return null\n    })\n  }\n\n  private filenameField(\n      filename: string,\n      props: {\n        onChange: (value: any) => void\n        \"data-tip\": string\n        value: any\n        key: string\n        desc: string\n      }\n  ) {\n    const coeffDir = this.props.coeffDir\n    const selectedFile = coeffFileNameFromPath(coeffDir, filename)\n    return <TextOption\n        {...props}\n        value={selectedFile}\n        onChange={value => this.props.updateFilter(coeffFileNameUpdate(coeffDir, value))}/>\n  }\n\n  private hasHiddenDefaultValue() {\n    const filterDefaults = this.props.filterDefaults\n    return filterDefaults\n        && Object.keys(filterDefaults).some(parameter => this.isHiddenDefaultValue(parameter))\n  }\n\n  private isHiddenDefaultValue(parameter: string) {\n    const filter = this.props.filter\n    const filterDefaults: any = this.props.filterDefaults\n    return !this.props.showDefaults\n        && parameter\n        && hiddenParameters.includes(parameter)\n        && filter.parameters[parameter] === filterDefaults[parameter]\n  }\n\n  parameterInfos: {\n    [type: string]: {\n      type: 'text' | 'int' | 'float' | 'floatlist' | 'bool'\n      desc: string\n      tooltip: string\n    } | {\n      type: 'enum'\n      desc: string\n      tooltip: string\n      options: string[]\n    }\n  } = {\n    a: {\n      type: \"floatlist\",\n      desc: \"a\",\n      tooltip: \"Comma-separated list of coefficients for a\",\n    },\n    a1: {\n      type: \"float\",\n      desc: \"a1\",\n      tooltip: \"Value for Biquad a1 coefficient\",\n    },\n    a2: {\n      type: \"float\",\n      desc: \"a2\",\n      tooltip: \"Value for Biquad a2 coefficient\",\n    },\n    amplitude: {\n      type: \"float\",\n      desc: \"amplitude\",\n      tooltip: \"Dither amplitude relative to target LSB\",\n    },\n    b0: {\n      type: \"float\",\n      desc: \"b0\",\n      tooltip: \"Value for Biquad b0 coefficient\",\n    },\n    b: {\n      type: \"floatlist\",\n      desc: \"b\",\n      tooltip: \"Comma-separated list of coefficients for b\",\n    },\n    b1: {\n      type: \"float\",\n      desc: \"b1\",\n      tooltip: \"Value for Biquad b1 coefficient\",\n    },\n    b2: {\n      type: \"float\",\n      desc: \"b2\",\n      tooltip: \"Value for Biquad b2 coefficient\",\n    },\n    bandwidth: {\n      type: \"float\",\n      desc: \"bandwidth\",\n      tooltip: \"Filter bandwidth in octaves\"\n    },\n    bits: { type: \"int\", desc: \"bits\", tooltip: \"Target bit depth for dither\" },\n    channel: {\n      type: \"int\",\n      desc: \"channel\",\n      tooltip: \"Index of channel to use, starting from 0\",\n    },\n    delay: { type: \"float\", desc: \"delay\", tooltip: \"Delay in ms or samples\" },\n    filename: {\n      type: \"text\",\n      desc: \"filename\",\n      tooltip:\n          `Filter file name\n           <br/>$samplerate$ will be replaced with the current samplerate\n           <br/>$channels$ will be replaced with the number of channels of the capture device\n          `,\n    },\n    format: {\n      type: \"enum\",\n      desc: \"format\",\n      options: [\"S16LE\", \"S24LE\", \"S24LE3\", \"S32LE\", \"FLOAT32LE\", \"FLOAT64LE\", \"TEXT\"],\n      tooltip: \"Sample format\",\n    },\n    freq: { type: \"float\", desc: \"freq\", tooltip: \"Frequency\" },\n    freq_act: {\n      type: \"float\",\n      desc: \"freq_act\",\n      tooltip: \"Frequency of actual system\",\n    },\n    freq_target: {\n      type: \"float\",\n      desc: \"freq_target\",\n      tooltip: \"Target frequency\",\n    },\n    gain: { type: \"float\", desc: \"gain\", tooltip: \"Gain in dB\" },\n    high_boost: {\n      type: \"float\",\n      desc: \"high_boost\",\n      tooltip: \"Volume boost for high frequencies when volume is at reference_level - 20dB\",\n    },\n    inverted: { type: \"bool\", desc: \"inverted\", tooltip: \"Invert signal\" },\n    length: {\n      type: \"int\",\n      desc: \"length\",\n      tooltip: \"Number of coefficients to generate\",\n    },\n    low_boost: {\n      type: \"float\",\n      desc: \"low_boost\",\n      tooltip: \"Volume boost for low frequencies when volume is at reference_level - 20dB\",\n    },\n    mute: { type: \"bool\", desc: \"mute\", tooltip: \"Mute\" },\n    order: { type: \"int\", desc: \"order\", tooltip: \"Filter order\" },\n    q: { type: \"float\", desc: \"Q\", tooltip: \"Q-value\" },\n    q_act: {\n      type: \"float\",\n      desc: \"Q actual\",\n      tooltip: \"Q-value of actual system\",\n    },\n    q_target: { type: \"float\", desc: \"Q target\", tooltip: \"Target Q-value\" },\n    ramp_time: {\n      type: \"float\",\n      desc: \"ramp_time\",\n      tooltip: \"Volume change ramp time in ms\",\n    },\n    read_bytes_lines: {\n      type: \"int\",\n      desc: \"read_bytes_lines\",\n      tooltip: \"Read up to this number of bytes or lines\",\n    },\n    reference_level: {\n      type: \"float\",\n      desc: \"reference_level\",\n      tooltip: \"Volume level at which low_boost/high_boost is starting to be applied.<br>\" +\n          \"Boost is scaled up linearly to reach the full value at reference_level - 20dB.<br>\" +\n          \"Above reference_level only gain is applied.\",\n    },\n    skip_bytes_lines: {\n      type: \"int\",\n      desc: \"skip_bytes_lines\",\n      tooltip: \"Number of bytes or lines to skip at beginning of file\",\n    },\n    slope: {\n      type: \"float\",\n      desc: \"slope\",\n      tooltip: \"Filter slope in dB per octave\",\n    },\n    subsample: { \n      type: \"bool\", \n      desc: \"subsample\", \n      tooltip: \"Use subsample precision for delays\" \n    },\n    unit: {\n      type: \"enum\",\n      desc: \"unit\",\n      options: [\"ms\", \"samples\"],\n      tooltip: \"Unit for delay\",\n    },\n    values: {\n      type: \"floatlist\",\n      desc: \"values\",\n      tooltip: \"Comma separated list of filter coefficients\",\n    },\n  }\n\n  qBandwithSlope = ['q', 'slope', 'bandwidth']\n\n  qAndBandwidthFilters = ['Peaking', 'Allpass', 'Notch', 'Bandpass']\n\n  qAndSlopeFilters = ['Lowshelf', 'Highshelf']\n\n  defaultParameterValues: { [parameter: string]: number } = {\n    'q': 0.5,\n    'slope': 6,\n    'bandwidth': 1\n  }\n\n  QorBandwithOrSlope(props: {\n    parameter: string\n    parameters: { [p: string]: any }\n    desc: string\n    value: number\n    error?: string\n    'data-tip': string\n    onDescChange: (option: string) => void\n    onChange: (value: number) => void\n  }) {\n    const {parameter, parameters, desc, value, error, onDescChange, onChange} = props\n    let descOptions: { [parameter: string]: string } = {}\n    if (this.qAndSlopeFilters.includes(parameters.type))\n      ['q', 'slope'].forEach(p => descOptions[p] = this.parameterInfos[p].desc)\n    else if (this.qAndBandwidthFilters.includes(parameters.type))\n      ['q', 'bandwidth'].forEach(p => descOptions[p] = this.parameterInfos[p].desc)\n    else\n      return <ErrorMessage message={error}/>\n    return <>\n      <label className=\"setting\" style={{textAlign: 'right'}} data-tip={props['data-tip']}>\n        <EnumInput\n            value={parameter}\n            options={descOptions}\n            desc={desc}\n            style={{display: 'table-cell', width: 'min-content', textAlign: 'right', marginRight: '5px'}}\n            data-tip={props[\"data-tip\"]}\n            onChange={onDescChange}/>\n        <FloatInput\n            className=\"setting-input\"\n            error={error !== undefined}\n            value={value}\n            style={{width: '55%'}}\n            data-tip={props[\"data-tip\"]}\n            onChange={onChange}/>\n        <ErrorMessage message={error}/>\n      </label>\n    </>\n  }\n}","import React from \"react\"\nimport \"./index.css\"\nimport {CaptureDevice, Config, Devices, Formats, PlaybackDevice, ResamplerTypes} from \"./config\"\nimport {GuiConfig} from \"./guiconfig\"\nimport {\n  BoolOption,\n  Box,\n  EnumInput,\n  EnumOption,\n  ErrorMessage,\n  FloatOption,\n  IntInput,\n  IntOption,\n  TextOption,\n  Update\n} from \"./utilities/common-tsx\"\nimport {ErrorsForPath, errorsForSubpath} from \"./utilities/errors\"\n\nexport function DevicesTab(props: {\n  guiConfig: GuiConfig\n  devices: Devices\n  errors: ErrorsForPath\n  updateConfig: (update: Update<Config>) => void\n}) {\n  const updateDevices = (update: Update<Devices>) => props.updateConfig(config => update(config.devices))\n  const {guiConfig, devices, errors} = props\n  return <div className=\"tabpanel\">\n    <ErrorMessage message={errors({path: []})}/>\n    <Samplerate\n        hide_capture_samplerate={guiConfig.hide_capture_samplerate}\n        devices={devices}\n        errors={errors}\n        onChange={updateDevices}/>\n    <BufferOptions\n        devices={devices}\n        errors={errors}\n        onChange={updateDevices}/>\n    <SilenceOptions\n        hide_silence={guiConfig.hide_silence}\n        devices={devices}\n        errors={errors}\n        onChange={updateDevices}/>\n    <RateAdjustOptions\n        devices={devices}\n        errors={errors}\n        onChange={updateDevices}/>\n    <ResamplingOptions\n        hide_capture_samplerate={guiConfig.hide_capture_samplerate}\n        devices={devices}\n        errors={errors}\n        onChange={updateDevices}/>\n    <RateMonitoringOptions\n        hide_rate_monitoring={guiConfig.hide_rate_monitoring}\n        devices={devices}\n        errors={errors}\n        onChange={updateDevices}/>\n    <CaptureOptions\n        hide_capture_device={guiConfig.hide_capture_device}\n        capture={devices.capture}\n        errors={errorsForSubpath(errors, 'capture')}\n        onChange={updateDevices}/>\n    <PlaybackOptions\n        hide_playback_device={guiConfig.hide_playback_device}\n        playback={devices.playback}\n        errors={errorsForSubpath(errors, 'playback')}\n        onChange={updateDevices}\n    />\n  </div>\n}\n\nfunction Samplerate(props: {\n  hide_capture_samplerate: boolean\n  devices: Devices\n  errors: ErrorsForPath\n  onChange: (update: Update<Devices>) => void\n}) {\n  if (props.hide_capture_samplerate && !props.devices.enable_resampling)\n    return null\n  return <SamplerateOption\n      samplerate={props.devices.samplerate}\n      error={props.errors({path: ['samplerate']})}\n      desc=\"samplerate\"\n      data-tip=\"Sample rate for processing and output\"\n      onChange={samplerate => props.onChange(devices => { devices.samplerate = samplerate })}\n      extraPadding={true}\n  />\n}\n\nfunction SamplerateOption(props: {\n  samplerate: number\n  error?: string\n  desc: string\n  'data-tip': string\n  onChange: (samplerate: number) => void\n  extraPadding?: boolean\n}) {\n  const defaultSampleRates = [44100, 48000, 88200, 96000, 176400, 192000, 352800, 384000, 705600, 768000]\n  function isNonDefaultSamplerate(samplerate: number): boolean {\n    return !defaultSampleRates.includes(samplerate)\n  }\n  const other = 'Other'\n  const samplerate = props.samplerate\n  const padding = props.extraPadding ? '0 12px' : '0'\n  return <div className=\"setting\" data-tip={props[\"data-tip\"]} style={{padding: padding}}>\n    <label htmlFor={props.desc} className=\"setting-label\">{props.desc}</label>\n    <EnumInput\n        value={isNonDefaultSamplerate(samplerate) ? other : samplerate.toString()}\n        options={defaultSampleRates.map(samplerate => samplerate.toString()).concat([other])}\n        desc={props.desc}\n        data-tip={props[\"data-tip\"]}\n        style={{width: isNonDefaultSamplerate(samplerate) ? '40%' : '100%'}}\n        className=\"setting-input\"\n        onChange={value => {\n          const parsed = parseInt(value)\n          const newSamplerate = isNaN(parsed) ? 0 : parsed\n          props.onChange(newSamplerate)\n        }}/>\n    {isNonDefaultSamplerate(samplerate) &&\n    <IntInput\n        value={samplerate}\n        data-tip={props[\"data-tip\"]}\n        className=\"setting-input\"\n        style={{width: '60%'}}\n        onChange={samplerate => props.onChange(samplerate)}/>\n    }\n    <ErrorMessage message={props.error}/>\n  </div>\n}\n\nfunction BufferOptions(props: {\n  devices: Devices,\n  errors: ErrorsForPath\n  onChange: (update: Update<Devices>) => void\n}) {\n  return <Box title=\"Buffers\">\n    <IntOption\n        value={props.devices.chunksize}\n        error={props.errors({path: ['chunksize']})}\n        desc=\"chunksize\"\n        data-tip=\"Chunksize for the processing\"\n        onChange={chunksize => props.onChange(devices => devices.chunksize = chunksize)}/>\n    <IntOption\n        value={props.devices.queuelimit}\n        error={props.errors({path: ['queuelimit']})}\n        desc=\"queuelimit\"\n        data-tip=\"Length limit for internal queues\"\n        onChange={queuelimit => props.onChange(devices => devices.queuelimit = queuelimit)}/>\n  </Box>\n}\n\nfunction SilenceOptions(props: {\n  hide_silence: boolean\n  devices: Devices\n  errors: ErrorsForPath\n  onChange: (update: Update<Devices>) => void\n}) {\n  if (props.hide_silence)\n    return null\n  return <Box title=\"Silence\">\n    <FloatOption\n        value={props.devices.silence_threshold}\n        error={props.errors({path: ['silence_threshold']})}\n        desc=\"silence_threshold\"\n        data-tip=\"Threshold for silence in dB\"\n        onChange={silenceThreshold => props.onChange(devices => devices.silence_threshold = silenceThreshold)}/>\n    <FloatOption\n        value={props.devices.silence_timeout}\n        error={props.errors({path: ['silence_timeout']})}\n        desc=\"silence_timeout\"\n        data-tip=\"Pause processing after this many seconds of silence\"\n        onChange={silenceTimeout => props.onChange(devices => devices.silence_timeout = silenceTimeout)}/>\n  </Box>\n}\n\nfunction RateAdjustOptions(props: {\n  devices: Devices\n  errors: ErrorsForPath\n  onChange: (update: Update<Devices>) => void\n}) {\n  let playbackDeviceIsOneOf = (types: string[]) => types.includes(props.devices.playback.type)\n  if (playbackDeviceIsOneOf([\"File\", \"Stdout\", \"Pulse\"]))\n    return null\n  return <Box title=\"Rate adjust\">\n    <BoolOption\n        value={props.devices.enable_rate_adjust}\n        error={props.errors({path: ['enable_rate_adjust']})}\n        desc=\"enable_rate_adjust\"\n        data-tip=\"Enable rate adjust\"\n        onChange={enableRateAdjust => props.onChange(devices => devices.enable_rate_adjust = enableRateAdjust)}/>\n    <IntOption\n        value={props.devices.adjust_period}\n        error={props.errors({path: ['adjust_period']})}\n        desc=\"adjust_period\"\n        data-tip=\"Delay in seconds between rate adjustments\"\n        onChange={adjustPeriod => props.onChange(devices => devices.adjust_period = adjustPeriod)}/>\n    <IntOption\n        value={props.devices.target_level}\n        error={props.errors({path: ['target_level']})}\n        desc=\"target_level\"\n        data-tip=\"Target output buffer fill level for rate adjust\"\n        onChange={targetLevel => props.onChange(devices => devices.target_level = targetLevel)}/>\n  </Box>\n}\n\nfunction ResamplingOptions(props: {\n  hide_capture_samplerate: boolean\n  devices: Devices\n  errors: ErrorsForPath\n  error?: string\n  onChange: (update: Update<Devices>) => void\n}) {\n  const {devices, errors} = props\n  return <Box title=\"Resampling\">\n    <BoolOption\n        value={devices.enable_resampling}\n        error={errors({path: ['enable_resampling']})}\n        desc=\"enable_resampling\"\n        data-tip=\"Enable rasampling\"\n        onChange={enableResampling => props.onChange(devices => devices.enable_resampling = enableResampling)}/>\n    <EnumOption\n        value={devices.resampler_type}\n        error={errors({path: ['resampler_type']})}\n        options={ResamplerTypes}\n        desc=\"resampler_type\"\n        data-tip=\"Resampler type\"\n        onChange={resampler => props.onChange(devices => devices.resampler_type = resampler)}/>\n    {!props.hide_capture_samplerate &&\n    <SamplerateOption\n        samplerate={devices.capture_samplerate}\n        error={errors({path: ['capture_samplerate']})}\n        desc=\"capture_samplerate\"\n        data-tip=\"Sample rate for capture device.<br>If different from 'samplerate' then resampling must be enabled\"\n        onChange={captureSamplerate => props.onChange(devices => devices.capture_samplerate = captureSamplerate)}/>\n    }\n  </Box>\n}\n\nfunction RateMonitoringOptions(props: {\n    hide_rate_monitoring: boolean\n    devices: Devices\n    errors: ErrorsForPath\n    error?: string\n    onChange: (update: Update<Devices>) => void\n  }) {\n    if (props.hide_rate_monitoring)\n        return null\n    return <Box title=\"Capture rate monitoring\">\n        <FloatOption\n            value={props.devices.rate_measure_interval}\n            error={props.errors({path: ['rate_measure_interval']})}\n            desc=\"rate_measure_interval\"\n            data-tip=\"Interval for rate measurements, in seconds\"\n            onChange={rateMeasureInterval => props.onChange(devices => devices.rate_measure_interval = rateMeasureInterval)}/>\n        <BoolOption\n            value={props.devices.stop_on_rate_change}\n            error={props.errors({path: ['stop_on_rate_change']})}\n            desc=\"stop_on_rate_change\"\n            data-tip=\"Stop processing when a sample rate change is detected\"\n            onChange={stopOnRateChange => props.onChange(devices => devices.stop_on_rate_change = stopOnRateChange)}/>\n    </Box>\n  }\n\nfunction CaptureOptions(props: {\n  hide_capture_device: boolean\n  capture: CaptureDevice\n  errors: ErrorsForPath\n  onChange: (update: Update<Devices>) => void\n}) {\n  if (props.hide_capture_device)\n    return null\n  const defaults: { [type: string]: CaptureDevice } = {\n    Alsa: { type: 'Alsa', channels: 2, format: 'S32LE', device: 'hw:0', retry_on_error: false, avoid_blocking_read: false },\n    CoreAudio: { type: 'CoreAudio', channels: 2, format: 'FLOAT32LE', device: 'blablamac'},\n    Pulse: { type: 'Pulse', channels: 2, format: 'S32LE', device: 'something' },\n    Wasapi: { type: 'Wasapi', channels: 2, format: 'FLOAT32LE', device: 'blablawin', exclusive: false, loopback: false},\n    Jack: { type: 'Jack', channels: 2, device: 'default'},\n    Stdin: { type: 'Stdin', channels: 2, format: 'S32LE', extra_samples: 0, skip_bytes: 0, read_bytes: 0 },\n    File: { type: 'File', channels: 2, format: 'S32LE', filename: '/path/to/file',\n      extra_samples: 0, skip_bytes: 0, read_bytes: 0 },\n  }\n  const {capture, onChange, errors} = props\n  return <Box title=\"Capture device\">\n    <ErrorMessage message={errors({path: []})}/>\n    <EnumOption\n        value={capture.type}\n        error={errors({path: ['type']})}\n        options={Object.keys(defaults)}\n        desc=\"type\"\n        data-tip=\"Audio backend for capture\"\n        onChange={captureType => onChange(devices => devices.capture = defaults[captureType])}/>\n    <IntOption\n        value={capture.channels}\n        error={errors({path: ['channels']})}\n        desc=\"channels\"\n        data-tip=\"Number of channels\"\n        withControls={true}\n        min={1}\n        onChange={channels => onChange(devices => devices.capture.channels = channels)}/>\n    {(capture.type !== 'Jack') &&\n    <EnumOption\n        value={capture.format}\n        error={errors({path: ['format']})}\n        options={Formats}\n        desc=\"sampleformat\"\n        data-tip=\"Sample format\"\n        onChange={format => onChange(devices => // @ts-ignore\n            devices.capture.format = format\n        )}/>\n    }\n    {(capture.type === 'Alsa' || capture.type === 'CoreAudio' || capture.type === 'Pulse' || capture.type === 'Wasapi') &&\n    <TextOption\n        value={capture.device}\n        error={errors({path: ['device']})}\n        desc=\"device\"\n        data-tip=\"Name of device\"\n        onChange={device => onChange(devices => // @ts-ignore\n            devices.capture.device = device\n        )}/>\n    }\n    {(capture.type === 'Alsa') && <>\n        <BoolOption\n            value={capture.retry_on_error}\n            error={errors({path: ['device']})}\n            desc=\"retry_on_error\"\n            data-tip=\"Retry reading from device on errors, may help with buggy devices\"\n            onChange={retry_on_error => onChange(devices => // @ts-ignore\n                devices.capture.retry_on_error = retry_on_error\n            )}/>\n        <BoolOption\n            value={capture.avoid_blocking_read}\n            error={errors({path: ['device']})}\n            desc=\"avoid_blocking_read\"\n            data-tip=\"Avoid blocking on reads, may help with buggy devices\"\n            onChange={avoid_blocking_read => onChange(devices => // @ts-ignore\n                devices.capture.avoid_blocking_read = avoid_blocking_read\n            )}/>\n        </>\n    }\n    {(capture.type === 'Wasapi') && <>\n        <BoolOption\n            value={capture.exclusive}\n            error={errors({path: ['exclusive']})}\n            desc=\"exclusive\"\n            data-tip=\"Use exclusive mode\"\n            onChange={exclusive => onChange(devices => // @ts-ignore\n                devices.capture.exclusive = exclusive\n            )}/>\n        <BoolOption\n            value={capture.loopback}\n            error={errors({path: ['loopback']})}\n            desc=\"loopback\"\n            data-tip=\"Use loopback capture mode to capture from a playback device\"\n            onChange={loopback => onChange(devices => // @ts-ignore\n                devices.capture.loopback = loopback\n            )}/>\n        </>\n    }\n    {capture.type === 'File' &&\n    <TextOption\n        value={capture.filename}\n        error={errors({path: ['filename']})}\n        desc=\"filename\"\n        data-tip=\"Filename including path\"\n        onChange={filename => onChange(devices => // @ts-ignore\n            devices.capture.filename = filename\n        )}/>\n    }\n    {(capture.type === 'File' || capture.type === 'Stdin') && <>\n      <IntOption\n          value={capture.extra_samples}\n          error={errors({path: ['extra_samples']})}\n          desc=\"extra_samples\"\n          data-tip=\"Number of extra samples to insert after end of file\"\n          onChange={extra_samples => onChange(devices => // @ts-ignore\n              devices.capture.extra_samples = extra_samples\n          )}/>\n      <IntOption\n          value={capture.skip_bytes}\n          error={errors({path: ['skip_bytes']})}\n          desc=\"skip_bytes\"\n          data-tip=\"Number of bytes to skip at beginning of file\"\n          onChange={skip_bytes => onChange(devices => // @ts-ignore\n              devices.capture.skip_bytes = skip_bytes\n          )}/>\n      <IntOption\n          value={capture.read_bytes}\n          error={errors({path: ['read_bytes']})}\n          desc=\"read_bytes\"\n          data-tip=\"Read up to this number of bytes\"\n          onChange={read_bytes => onChange(devices => // @ts-ignore\n              devices.capture.read_bytes = read_bytes\n          )}/>\n    </>\n    }\n  </Box>\n}\n\nfunction PlaybackOptions(props: {\n  hide_playback_device: boolean\n  playback: PlaybackDevice\n  errors: ErrorsForPath\n  onChange: (update: Update<Devices>) => void\n}) {\n  if (props.hide_playback_device)\n    return null\n  const defaults: { [type: string]: PlaybackDevice } = {\n    Alsa: {type: 'Alsa', channels: 2, format: 'S32LE', device: 'hw:0'},\n    CoreAudio: {type: 'CoreAudio', channels: 2, format: 'FLOAT32LE', device: 'blablamac'},\n    Pulse: {type: 'Pulse', channels: 2, format: 'S32LE', device: 'something'},\n    Wasapi: {type: 'Wasapi', channels: 2, format: 'FLOAT32LE', device: 'blablawin', exclusive: false},\n    Jack: {type: 'Jack', channels: 2, device: 'default'},\n    Stdout: {type: 'Stdout', channels: 2, format: 'S32LE'},\n    File: {type: 'File', channels: 2, format: 'S32LE', filename: '/path/to/file'},\n  }\n  const {onChange, playback, errors} = props\n  return <Box title=\"Playback device\">\n    <ErrorMessage message={errors({path: []})}/>\n    <EnumOption\n        value={props.playback.type}\n        error={errors({path: ['type']})}\n        options={Object.keys(defaults)}\n        data-tip=\"Audio backend for playback\"\n        desc=\"type\"\n        onChange={playbackType => props.onChange(devices => devices.playback = defaults[playbackType])}/>\n    <IntOption\n        value={playback.channels}\n        error={errors({path: ['channels']})}\n        desc=\"channels\"\n        data-tip=\"Number of channels\"\n        withControls={true}\n        min={1}\n        onChange={channels => onChange(devices => devices.playback.channels = channels)}/>\n    {(playback.type !== 'Jack') &&\n    <EnumOption\n        value={playback.format}\n        error={errors({path: ['format']})}\n        options={Formats}\n        desc=\"sampleformat\"\n        data-tip=\"Sample format\"\n        onChange={format => onChange(devices =>  // @ts-ignore\n          devices.playback.format = format\n        )}/>\n    }\n    {(playback.type === 'Alsa' || playback.type === 'CoreAudio' || playback.type === 'Pulse' || playback.type === 'Wasapi') &&\n    <TextOption\n        value={playback.device}\n        error={errors({path: ['device']})}\n        desc=\"device\"\n        data-tip=\"Name of device\"\n        onChange={device => onChange(devices => // @ts-ignore\n            devices.playback.device = device\n        )}/>\n    }\n    {(playback.type === 'Wasapi') &&\n    <BoolOption\n        value={playback.exclusive}\n        error={errors({path: ['device']})}\n        desc=\"exclusive\"\n        data-tip=\"Use exclusive mode\"\n        onChange={exclusive => onChange(devices => // @ts-ignore\n            devices.playback.exclusive = exclusive\n        )}/>\n    }\n    {playback.type === 'File' &&\n    <TextOption\n        value={playback.filename}\n        error={errors({path: ['filename']})}\n        desc=\"filename\"\n        data-tip=\"Filename including path\"\n        onChange={filename => onChange(devices => // @ts-ignore\n            devices.playback.filename = filename\n        )}/>\n    }\n  </Box>\n}","import React from \"react\"\nimport \"./index.css\"\nimport {\n  AddButton,\n  Box,\n  DeleteButton,\n  ErrorMessage,\n  IntOption,\n  MdiButton,\n  modifiedCopyOf,\n  ParsedInput,\n  Update\n} from \"./utilities/common-tsx\"\nimport {\n  Config,\n  defaultMapping,\n  defaultMixer,\n  defaultSource,\n  Mapping,\n  Mixer,\n  mixerNamesOf,\n  Mixers,\n  newMixerName,\n  removeMixer,\n  renameMixer,\n  Source\n} from \"./config\"\nimport {mdiPlusMinusVariant, mdiVolumeOff} from \"@mdi/js\"\nimport {ErrorsForPath, errorsForSubpath} from \"./utilities/errors\"\n\nexport class MixersTab extends React.Component<{\n  mixers: Mixers\n  errors: ErrorsForPath\n  updateConfig: (update: Update<Config>) => void\n}, {\n  mixerKeys: { [name: string]: number}\n}> {\n  constructor(props: any) {\n    super(props)\n    this.mixerNames = this.mixerNames.bind(this)\n    this.addMixer = this.addMixer.bind(this)\n    this.renameMixer = this.renameMixer.bind(this)\n    this.removeMixer = this.removeMixer.bind(this)\n    this.isFreeMixerName = this.isFreeMixerName.bind(this)\n    this.state = {\n      mixerKeys: {}\n    }\n    this.mixerNames().forEach((name, i) => this.state.mixerKeys[name] = i)\n  }\n\n  private mixerNames(): string[] {\n    return mixerNamesOf(this.props.mixers)\n  }\n\n  private addMixer() {\n    this.props.updateConfig(config => {\n      const newMixer = newMixerName(config.mixers)\n      this.setState(oldState =>\n          modifiedCopyOf(oldState, newState =>\n              newState.mixerKeys[newMixer] = 1 + Math.max(0, ...Object.values(oldState.mixerKeys))\n          )\n      )\n      config.mixers[newMixer] = defaultMixer()\n    })\n  }\n\n  private removeMixer(name: string) {\n    this.props.updateConfig(config => {\n      removeMixer(config, name)\n      this.setState(oldState =>\n          modifiedCopyOf(oldState, newState => delete newState.mixerKeys[name])\n      )\n    })\n  }\n\n  private renameMixer(oldName: string, newName: string) {\n    if (this.isFreeMixerName(newName))\n      this.props.updateConfig(config => {\n        this.setState(oldState =>\n            modifiedCopyOf(oldState, newState => {\n              newState.mixerKeys[newName] = newState.mixerKeys[oldName]\n              delete newState.mixerKeys[oldName]\n            }))\n        renameMixer(config, oldName, newName)\n      })\n  }\n\n  private isFreeMixerName(name: string) {\n    return !this.mixerNames().includes(name)\n  }\n\n  render() {\n    const {mixers, errors, updateConfig} = this.props\n    return (\n        <div className=\"tabpanel\">\n          <ErrorMessage message={errors({path: []})}/>\n          {this.mixerNames()\n              .map(name =>\n                  <MixerView\n                      key={this.state.mixerKeys[name]}\n                      name={name}\n                      mixer={mixers[name]}\n                      errors={errorsForSubpath(errors, name)}\n                      update={updateMixer => updateConfig(config => updateMixer(config.mixers[name]))}\n                      isFreeMixerName={this.isFreeMixerName}\n                      rename={newName => this.renameMixer(name, newName)}\n                      remove={() => this.removeMixer(name)}\n                  />\n              )\n          }\n          <div>\n            <AddButton tooltip=\"Add a new mixer\" onClick={this.addMixer}/>\n          </div>\n        </div>\n    )\n  }\n}\n\nfunction MixerView(props: {\n  name: string\n  mixer: Mixer\n  errors: ErrorsForPath\n  isFreeMixerName: (name: string) => boolean\n  rename: (newName: string) => void\n  remove: () => void\n  update: (update: Update<Mixer>) => void\n}) {\n  const {name, mixer, errors, rename, remove, update} = props\n  const isValidMixerName = (newName: string) =>\n      name === newName || (newName.trim().length > 0 && props.isFreeMixerName(newName))\n  return <Box title={\n    <>\n      <ParsedInput\n          value={name}\n          style={{width: '300px'}}\n          data-tip=\"Mixer name, must be unique\"\n          onChange={rename}\n          asString={name => name}\n          parseValue={name => isValidMixerName(name) ? name : undefined}\n      />\n      <DeleteButton\n          tooltip=\"Delete this mixer\"\n          smallButton={true}\n          onClick={remove}/>\n    </>\n  }>\n    <ErrorMessage message={errors({path: []})}/>\n    <div style={{display: 'flex', justifyContent: 'space-evenly'}}>\n      <IntOption\n          value={mixer.channels.in}\n          desc=\"in\"\n          data-tip=\"Number of channels in\"\n          small={true}\n          withControls={true}\n          min={1}\n          onChange={channelsIn => update(mixer => mixer.channels.in = channelsIn)}/>\n      <IntOption\n          value={mixer.channels.out}\n          desc=\"out\"\n          data-tip=\"Number of channels out\"\n          small={true}\n          withControls={true}\n          min={1}\n          onChange={channelsOut => update(mixer => mixer.channels.out = channelsOut)}/>\n    </div>\n    <ErrorMessage message={errors({path: ['channels']})}/>\n    <ErrorMessage message={errors({path: ['channels', 'in']})}/>\n    <ErrorMessage message={errors({path: ['channels', 'out']})}/>\n    {mixer.mapping.map((mapping, index) =>\n        <MappingView\n            key={index}\n            mapping={mapping}\n            errors={errorsForSubpath(errors, 'mapping', index)}\n            channels={mixer.channels}\n            update={mappingUpdate => update(mixer => mappingUpdate(mixer.mapping[index]))}\n            remove={() => update(mixer => mixer.mapping.splice(index, 1))}/>\n    )}\n    <div>\n      {mixer.mapping.length < mixer.channels.out &&\n        <AddButton\n            tooltip=\"Add a mapping\"\n            style={{marginTop: '10px'}}\n            onClick={() => update(mixer => mixer.mapping.push(defaultMapping(mixer.channels.out, mixer.mapping)))}/>\n      }\n    </div>\n  </Box>\n}\n\nfunction MappingView(props: {\n  mapping: Mapping\n  errors: ErrorsForPath\n  channels: { in: number, out: number }\n  remove: () => void\n  update: (update: Update<Mapping>) => void\n}) {\n  const {mapping, errors, channels, remove, update} = props\n  return <Box style={{marginTop: '5px'}} title={\n    <>\n      <IntOption\n          value={mapping.dest}\n          desc=\"dest\"\n          data-tip=\"Destination channel\"\n          small={true}\n          withControls={true}\n          min={0}\n          max={channels.out-1}\n          onChange={dest => update(mapping => mapping.dest = dest)}/>\n      <MdiButton\n          icon={mdiVolumeOff}\n          tooltip={\"Mute destination channel\"}\n          smallButton={true}\n          className={mapping.mute ? \"highlighted-button\" : \"\"}\n          onClick={() => update(mapping => mapping.mute = !mapping.mute)}/>\n      <DeleteButton\n          tooltip=\"Delete this mapping\"\n          smallButton={true}\n          onClick={remove}/>\n    </>\n  }>\n    <ErrorMessage message={errors({path: ['dest']})}/>\n    <ErrorMessage message={errors({path: ['mute']})}/>\n    <ErrorMessage message={errors({path: []})}/>\n    <ErrorMessage message={errors({path: ['sources']})}/>\n    <div style={{display: 'flex', flexDirection: 'column'}}>\n      {mapping.sources.map((source, index) =>\n          <React.Fragment key={index}>\n            <SourceView\n                source={source}\n                errors={errorsForSubpath(errors, 'sources', index)}\n                channelsIn={channels.in}\n                update={updateSource => update(mixer => updateSource(mixer.sources[index]))}\n                remove={() => update(mixer => mixer.sources.splice(index, 1))}/>\n            {index+1 < mapping.sources.length && <hr/>}\n          </React.Fragment>\n      )}\n      <div>\n        <AddButton\n            tooltip=\"Add a source to this mapping\"\n            onClick={() => update(mapping => mapping.sources.push(defaultSource(channels.in, mapping.sources)))}/>\n      </div>\n    </div>\n  </Box>\n}\n\nfunction SourceView(props: {\n  source: Source\n  errors: ErrorsForPath\n  channelsIn: number\n  update: (update: Update<Source>) => void\n  remove: () => void\n}) {\n  const {source, errors, channelsIn, update, remove} = props\n  return <>\n    <div className=\"horizontally-spaced-content\">\n      <div style={{flexGrow: 1}}>\n        <IntOption\n            value={source.channel}\n            desc=\"channel\"\n            data-tip=\"Channel number\"\n            small={true}\n            withControls={true}\n            min={0}\n            max={channelsIn - 1}\n            onChange={channel => update(source => source.channel = channel)}/>\n      </div>\n      <div style={{flexGrow: 1}}>\n        <IntOption\n            value={source.gain}\n            desc=\"gain\"\n            data-tip=\"Gain in dB\"\n            small={true}\n            onChange={gain => update(source => source.gain = gain)}/>\n      </div>\n      <MdiButton\n          icon={mdiPlusMinusVariant}\n          tooltip={\"Invert source channel\"}\n          smallButton={true}\n          className={source.inverted ? \"highlighted-button\" : \"\"}\n          onClick={() => update(source => source.inverted = !source.inverted)}/>\n      <MdiButton\n          icon={mdiVolumeOff}\n          tooltip={\"Mute source channel\"}\n          smallButton={true}\n          className={source.mute ? \"highlighted-button\" : \"\"}\n          onClick={() => update(source => source.mute = !source.mute)}/>\n      <DeleteButton tooltip=\"Delete this source\" smallButton={true} onClick={remove}/>\n    </div>\n    <ErrorMessage message={errors({path: [], includeChildren: true})}/>\n  </>\n}","import Popup from \"reactjs-popup\"\nimport 'reactjs-popup/dist/index.css'\nimport * as d3 from \"d3\"\nimport React from \"react\"\nimport \"../index.css\"\nimport {CloseButton, cssStyles} from \"../utilities/common-tsx\"\nimport {CaptureDevice, Config, PlaybackDevice} from \"../config\"\n\n\nexport function PipelinePopup(props: {\n  config: Config,\n  open: boolean,\n  onClose: () => void\n}) {\n  return <Popup\n      open={props.open}\n      closeOnDocumentClick\n      onClose={props.onClose}\n      contentStyle={{width: '80%'}}\n  >\n    <CloseButton onClick={props.onClose}/>\n    <PipelinePlot config={props.config}/>\n  </Popup>\n}\n\ninterface Rect {\n  x: number\n  y: number\n  width: number\n  height: number\n  fill: string\n  stroke: string\n  \"stroke-width\": number\n}\n\ninterface Text {\n  x: number\n  y: number\n  text: string\n  fill: string\n  size: number\n  angle: number\n}\n\ninterface Link {\n  source: number[]\n  target: number[]\n}\n\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface Block {\n  input: Point\n  output: Point\n}\n\nclass PipelinePlot extends React.Component<{config: Config}> {\n\n  private width = 1000\n  private height = 500\n\n  private textColor?: string\n  private borderColor?: string\n  private arrowColor?: string\n  private backgroundColor?: string\n  private frameBgColor?: string\n  private blockBgColor?: string\n  private blockTextColor?: string\n  private node?: any\n\n  componentDidMount() {\n    const styles = cssStyles()\n    this.textColor = styles.getPropertyValue('--text-color')\n    this.borderColor = styles.getPropertyValue('--box-border-color')\n    this.arrowColor = styles.getPropertyValue('--arrow-color')\n    this.backgroundColor = styles.getPropertyValue('--background-color')\n    this.frameBgColor = styles.getPropertyValue('--frame-background-color')\n    this.blockBgColor = styles.getPropertyValue('--block-background-color')\n    this.blockTextColor = styles.getPropertyValue('--block-text-color')\n    this.createPipelinePlot()\n  }\n\n  componentDidUpdate() {\n    this.createPipelinePlot()\n  }\n\n  private appendBlock(labels: Text[], boxes: Rect[], label: string, x: number, y: number, width: number): Block {\n    const rect = {\n      x: x - 0.5 * width,\n      y: y - 0.35,\n      width: width,\n      height: 0.7,\n      fill: this.blockBgColor!,\n      stroke: this.borderColor!,\n      \"stroke-width\": 1,\n    }\n    const text = {\n      x: x,\n      y: y + 0.1,\n      text: label,\n      fill: this.blockTextColor!,\n      size: 0.3,\n      angle: 0,\n    }\n    labels.push(text)\n    boxes.push(rect)\n    return {\n      output: { x: x + 0.5 * width, y: y },\n      input: { x: x - 0.5 * width, y: y },\n    }\n  }\n\n  private appendFrame(labels: Text[], boxes: Rect[], label: string, x: number, y: number, width: number, height:number) {\n    const rect = {\n      x: x - 0.5 * width,\n      y: -height / 2 + y,\n      width: width,\n      height: height,\n      fill: this.frameBgColor!,\n      stroke: this.borderColor!,\n      \"stroke-width\": 1,\n    }\n    const text = {\n      x: x,\n      y: -height / 2 - 0.2 + y,\n      text: label,\n      fill: this.textColor!,\n      size: 0.3,\n      angle: 0,\n    }\n    labels.push(text)\n    boxes.push(rect)\n  }\n\n  private appendLink(links: Link[], labels: Text[], source: Point, dest: Point, label?: string) {\n    const newlink = {\n      source: [source.x, source.y],\n      target: [dest.x, dest.y]\n    }\n    if (label) {\n      const position = dest.y <= source.y ?\n          {\n            x: (2 * source.x) / 3 + dest.x / 3,\n            y: (2 * source.y) / 3 + dest.y / 3,\n          }\n          : {\n            x: source.x / 3 + (2 * dest.x) / 3,\n            y: source.y / 3 + (2 * dest.y) / 3,\n          }\n      const text = {\n        ...position,\n        text: label,\n        fill: this.textColor!,\n        size: 0.2,\n        angle: 1.5 * 180 / 3.14 * Math.atan((dest.y - source.y) / (dest.x - source.x)),\n      }\n      labels.push(text)\n    }\n    links.push(newlink)\n  }\n\n  private static deviceText(device: CaptureDevice | PlaybackDevice): string {\n    if ('device' in device)\n      return device.device\n    else if ('filename' in device)\n      return device.filename\n    else\n      return device.type\n  }\n\n  private makeShapes(conf: Config) {\n    const spacing_h = 3\n    const spacing_v = 1\n    let max_v: number\n    const labels: Text[] = []\n    const boxes: Rect[] = []\n    const links: Link[] = []\n    const stages = []\n    const channels = []\n    const capture = conf[\"devices\"][\"capture\"]\n    let active_channels = capture[\"channels\"]\n    const capturename = PipelinePlot.deviceText(capture)\n    this.appendFrame(\n      labels,\n      boxes,\n      capturename,\n      0,\n      0,\n      1.5,\n      spacing_v * active_channels,\n    )\n    for (let n = 0; n < active_channels; n++) {\n      const label = \"ch \" + n\n      const io_points = this.appendBlock(\n        labels,\n        boxes,\n        label,\n        0,\n        spacing_v * (-active_channels / 2 + 0.5 + n),\n        1\n      )\n      channels.push([io_points])\n    }\n    stages.push(channels)\n    max_v = active_channels / 2 + 1\n\n    // loop through pipeline\n    let total_length = 0\n    let stage_start = 0\n    for (let n = 0; n < conf.pipeline.length; n++) {\n      const step = conf.pipeline[n]\n      if (step.type === \"Mixer\") {\n        total_length += 1\n        const mixername = step.name\n        const mixconf = conf[\"mixers\"][mixername]\n        active_channels = mixconf.channels.out\n        const mixerchannels: Block[][] = []\n        this.appendFrame(\n          labels,\n          boxes,\n          mixername,\n          spacing_h * total_length,\n          0,\n          1.5,\n          spacing_v * active_channels\n        )\n        for (let m = 0; m < active_channels; m++) {\n          mixerchannels.push([])\n          const label = \"ch \" + m\n          const io_points = this.appendBlock(\n            labels,\n            boxes,\n            label,\n            total_length * spacing_h,\n            spacing_v * (-active_channels / 2 + 0.5 + m),\n            1\n          )\n          mixerchannels[m].push(io_points)\n        }\n        for (let m = 0; m < mixconf.mapping.length; m++) {\n          const mapping = mixconf.mapping[m]\n          const dest_ch = mapping.dest\n          for (let p = 0; p < mapping.sources.length; p++) {\n            const src = mapping.sources[p]\n            const src_ch = src.channel\n            const label = src.gain + \" dB\" + (src.inverted ? \" inv.\" : '')\n            const srclen = stages[stages.length - 1][src_ch].length\n            const src_p = stages[stages.length - 1][src_ch][srclen - 1].output\n            const dest_p = mixerchannels[dest_ch][0].input\n            this.appendLink(links, labels, src_p, dest_p, label)\n          }\n        }\n        stages.push(mixerchannels)\n        stage_start = total_length\n        max_v = Math.max(max_v, active_channels / 2 + 1)\n      } else if (step.type === \"Filter\") {\n        const ch_nbr = step.channel\n        for (let m = 0; m < step.names.length; m++) {\n          const name = step.names[m]\n          const ch_step = stage_start + stages[stages.length - 1][ch_nbr].length\n          total_length = Math.max(total_length, ch_step)\n          const io_points = this.appendBlock(\n            labels,\n            boxes,\n            name,\n            ch_step * spacing_h,\n            spacing_v * (-active_channels / 2 + 0.5 + ch_nbr),\n            2.5\n          )\n          const src_list = stages[stages.length - 1][ch_nbr]\n          const src_p = src_list[src_list.length - 1].output\n          const dest_p = io_points.input\n          stages[stages.length - 1][ch_nbr].push(io_points)\n          this.appendLink(links, labels, src_p, dest_p)\n        }\n      }\n    }\n    const playbackchannels = []\n    total_length = total_length + 1\n    const max_h = (total_length + 1) * spacing_h\n    const playbackname = PipelinePlot.deviceText(conf.devices.playback)\n    this.appendFrame(\n      labels,\n      boxes,\n      playbackname,\n      spacing_h * total_length,\n      0,\n      1.5,\n      spacing_v * active_channels\n    )\n    for (let n = 0; n < active_channels; n++) {\n      const label = \"ch \" + n\n      const io_points = this.appendBlock(\n        labels,\n        boxes,\n        label,\n        spacing_h * total_length,\n        spacing_v * (-active_channels / 2 + 0.5 + n),\n        1\n      )\n      playbackchannels.push([io_points])\n      const srclen = stages[stages.length - 1][n].length\n      const src_p = stages[stages.length - 1][n][srclen - 1].output\n      const dest_p = io_points.input\n      this.appendLink(links, labels, src_p, dest_p)\n    }\n    stages.push(playbackchannels)\n    return {labels, boxes, links, max_h, max_v}\n  }\n\n  createPipelinePlot() {\n    let {labels, boxes, links, max_h, max_v} = this.makeShapes(this.props.config)\n    if (max_h > 4 * max_v)\n      max_v = max_h / 4\n    else\n      max_h = 4 * max_v\n\n    const node = this.node\n    const yScale = d3\n      .scaleLinear()\n      .domain([-max_v, max_v])\n      .range([0, this.height])\n    const xScale = d3\n      .scaleLinear()\n      .domain([-2, max_h])\n      .range([0, this.width])\n\n    const linkGen = d3\n        .linkHorizontal()\n        .source((d) => [xScale(d.source[0]), yScale(d.source[1])])\n        .target((d) => [xScale(d.target[0]), yScale(d.target[1])])\n\n    const markerBoxWidth = 7\n    const markerBoxHeight = 7\n    const refX = markerBoxWidth\n    const refY = markerBoxHeight / 2\n    const arrowPoints = [\n      [0, 0],\n      [0, markerBoxHeight],\n      [markerBoxWidth, markerBoxHeight / 2],\n    ]\n    d3.select(node)\n      .append(\"defs\")\n      .append(\"marker\")\n      .attr(\"id\", \"arrow\")\n      // @ts-ignore\n      .attr(\"viewBox\", [0, 0, markerBoxWidth, markerBoxHeight])\n      .attr(\"refX\", refX)\n      .attr(\"refY\", refY)\n      .attr(\"markerWidth\", markerBoxWidth)\n      .attr(\"markerHeight\", markerBoxHeight)\n      .attr(\"orient\", \"auto-start-reverse\")\n      .attr(\"fill\", this.arrowColor!)\n      .attr(\"stroke\", this.arrowColor!)\n      .append(\"path\")\n      // @ts-ignore\n      .attr(\"d\", d3.line()(arrowPoints))\n\n    const rects = d3\n        .select(node)\n        .selectAll(\"rect\")\n        .data(boxes)\n        .enter()\n        .append(\"rect\")\n\n    rects\n      .attr(\"x\", d => xScale(d.x))\n      .attr(\"y\", d => yScale(d.y))\n      .attr(\"rx\", xScale(0.1) - xScale(0))\n      .attr(\"ry\", yScale(0.1) - yScale(0))\n      .attr(\"width\", d => xScale(d.width) - xScale(0))\n      .attr(\"height\", d => yScale(d.height) - yScale(0))\n      .style(\"fill\", d => d.fill)\n      .style(\"stroke\", d => d.stroke)\n      .style(\"stroke-width\", d => d[\"stroke-width\"])\n\n    const text = d3\n        .select(node)\n        .selectAll(\"text\")\n        .data(labels)\n        .enter()\n        .append(\"text\")\n\n    //Add SVG Text Element Attributes\n    text\n      .text(d => d.text)\n      .attr(\"font-size\", d => yScale(d.size) - yScale(0) + \"px\")\n      .attr(\"fill\", d => d.fill)\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"transform\", d => (`translate(${xScale(d.x)},${yScale(d.y)}), rotate(${d.angle})`))\n      .attr(\"font-family\", \"sans-serif\")\n\n    d3.select(node)\n      .selectAll(null)\n      .data(links)\n      .join(\"path\")\n      // @ts-ignore\n      .attr(\"d\", linkGen)\n      .attr(\"marker-end\", \"url(#arrow)\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", this.arrowColor!)\n  }\n\n  render() {\n    return <svg\n        ref={node => this.node = node}\n        viewBox={`0 0 ${this.width} ${this.height}`}\n        style={{width: '100%', height: 'auto'}}\n    />\n  }\n}","import {DndProvider, DragElementWrapper, DropTargetMonitor, useDrag, useDrop} from \"react-dnd\"\nimport React, {ReactNode} from \"react\"\nimport Icon from \"@mdi/react\"\nimport {mdiDrag} from \"@mdi/js\"\nimport isEqual from \"lodash/isEqual\"\nimport {HTML5Backend} from \"react-dnd-html5-backend\"\n\nexport function DndContainer(props: { children: ReactNode }) {\n  return <DndProvider backend={HTML5Backend}>\n    {props.children}\n  </DndProvider>\n}\n\nexport interface DndProps {\n  isDragging: boolean\n  canDrop: boolean\n  drag: DragElementWrapper<any>\n  preview: DragElementWrapper<any>\n  drop: DragElementWrapper<any>\n}\n\ninterface anyNonPrimitiveObject {\n  [key: string]: any\n}\n\nexport function useDndSort<POSITION extends anyNonPrimitiveObject>(\n    itemType: string,\n    itemPosition: POSITION,\n    moveItemFrom: (from: POSITION, to: POSITION) => void\n): DndProps {\n  const [{isDragging}, drag, preview] = useDrag(() => ({\n    type: itemType,\n    item: itemPosition,\n    options: {dropEffect: 'move'},\n    collect: monitor => ({isDragging: monitor.isDragging()})\n  }))\n  const [{canDrop}, drop] = useDrop(() => ({\n    accept: itemType,\n    collect: (monitor: DropTargetMonitor<any>) => ({\n      canDrop: monitor.isOver() && !isEqual(monitor.getItem(), itemPosition)\n    }),\n    drop: (item: POSITION) => moveItemFrom(item, itemPosition)\n  }))\n  return {isDragging, canDrop, drag, preview, drop}\n}\n\nexport function DndSortable(props: DndProps & { children: ReactNode }) {\n  const {isDragging, canDrop, preview, drop, children} = props\n  return <div ref={preview} className=\"dropTargetParent\" style={{width: '100%'}}>\n    <div\n        ref={drop}\n        style={{width: '100%'}}\n        className={`horizontally-spaced-content${isDragging ? ' dragSource' : ''}${canDrop ? ' dropTarget' : ''}`}>\n      {children}\n    </div>\n  </div>\n}\n\nexport function DragHandle(props: {\n  drag: DragElementWrapper<any>\n  tooltip: string\n}) {\n  return <span ref={props.drag} style={{display: \"flex\", alignItems: 'center'}}>\n    <Icon path={mdiDrag} size={'24px'} className=\"drag-handle\" data-tip={props.tooltip}/>\n  </span>\n}","import React, {ReactNode} from \"react\"\nimport \"../index.css\"\nimport {PipelinePopup} from './pipelineplotter'\nimport {\n  AddButton,\n  Box,\n  ChartPopup,\n  DeleteButton,\n  EnumInput,\n  ERROR_BACKGROUND_STYLE,\n  ErrorMessage,\n  IntInput,\n  MdiButton,\n  moveItem,\n  moveItemDown,\n  moveItemUp,\n  PlotButton,\n  Update\n} from \"../utilities/common-tsx\"\nimport {\n  Config,\n  defaultFilterStep,\n  defaultMixerStep,\n  filterNamesOf,\n  Filters,\n  FilterStep,\n  mixerNamesOf,\n  Mixers,\n  MixerStep,\n  Pipeline,\n  PipelineStep\n} from \"../config\"\nimport {mdiArrowDownBold, mdiArrowUpBold} from \"@mdi/js\"\nimport {ErrorsForPath, errorsForSubpath} from \"../utilities/errors\"\nimport {DndContainer, DndSortable, DragHandle, useDndSort} from \"../utilities/dragndrop\"\n\n\nexport class PipelineTab extends React.Component<{\n  config: Config\n  updateConfig: (update: Update<Config>) => void\n  errors: ErrorsForPath\n}, {\n  plotPipeline: boolean\n  plotFilterStep: boolean\n  data?: any\n}> {\n  constructor(props: any) {\n    super(props)\n    this.state = {plotPipeline: false, plotFilterStep: false}\n  }\n\n  updatePipeline = (update: Update<Pipeline>) =>\n      this.props.updateConfig(config => update(config.pipeline))\n\n  addStep = () =>\n      this.updatePipeline(pipeline => pipeline.push(defaultFilterStep(this.props.config)))\n\n  removeStep = (index: number) =>\n      this.updatePipeline(pipeline => pipeline.splice(index, 1))\n\n  setStepType = (index: number, type: 'Filter' | 'Mixer') =>\n      this.updatePipeline(pipeline => {\n        if (type === 'Mixer')\n          pipeline[index] = defaultMixerStep(this.props.config)\n        else if (type === 'Filter')\n          pipeline[index] = defaultFilterStep(this.props.config)\n      })\n\n  plotFilterStep = (index: number) => {\n    fetch(\"/api/evalfilterstep\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({index: index, config: this.props.config}),\n    }).then(\n        result => result.json()\n            .then(data => this.setState({plotFilterStep: true, data: data})),\n        error => console.log(\"Failed\", error)\n    )\n  }\n\n  moveStepUp = (index: number) =>\n      this.updatePipeline(pipeline => moveItemUp(pipeline, index))\n\n  moveStepDown = (index: number) =>\n      this.updatePipeline(pipeline => moveItemDown(pipeline, index))\n\n  render() {\n    const errors = this.props.errors\n    const pipeline = this.props.config.pipeline\n    return <DndContainer>\n      <div className=\"tabpanel\">\n        <ErrorMessage message={errors({path: []})}/>\n        <div className=\"pipeline-channel\">\n          Capture: {this.props.config.devices.capture.channels} channels in\n        </div>\n        {pipeline.map((step: PipelineStep, index: number) => {\n              const stepErrors = errorsForSubpath(errors, index)\n              const typeSelect = <EnumInput\n                  value={step.type}\n                  options={['Mixer', 'Filter']}\n                  desc=\"type\"\n                  data-tip=\"Step type, Mixer or Filter\"\n                  onChange={type => this.setStepType(index, type)}/>\n              const controls = <>\n                <DeleteButton tooltip=\"Delete this step\" onClick={() => this.removeStep(index)}/>\n                <MdiButton\n                    icon={mdiArrowUpBold}\n                    tooltip=\"Move this step up\"\n                    enabled={index > 0}\n                    onClick={() => this.moveStepUp(index)}/>\n                <MdiButton\n                    icon={mdiArrowDownBold}\n                    tooltip=\"Move this step down\"\n                    enabled={index+1 < pipeline.length}\n                    onClick={() => this.moveStepDown(index)}/>\n              </>\n              if (step.type === 'Filter')\n                return <FilterStepView\n                    key={index}\n                    stepIndex={index}\n                    typeSelect={typeSelect}\n                    filterStep={step}\n                    filters={this.props.config.filters}\n                    updatePipeline={this.updatePipeline}\n                    plot={() => this.plotFilterStep(index)}\n                    errors={stepErrors}\n                    controls={controls}/>\n              if (step.type === 'Mixer')\n                return <MixerStepView\n                    key={index}\n                    stepIndex={index}\n                    typeSelect={typeSelect}\n                    mixerStep={step}\n                    mixers={this.props.config.mixers}\n                    updatePipeline={this.updatePipeline}\n                    errors={stepErrors}\n                    controls={controls}/>\n              else\n                return null\n            }\n        )}\n        <div className=\"horizontally-spaced-content\">\n          <AddButton tooltip=\"Add a pipeline step\" onClick={this.addStep}/>\n          <PlotButton tooltip=\"Plot the pipeline\" onClick={() => this.setState({plotPipeline: true})}/>\n        </div>\n        <div className=\"pipeline-channel\">\n          Playback: {this.props.config.devices.playback.channels} channels out\n        </div>\n        <PipelinePopup\n            key={this.state.plotPipeline as any}\n            open={this.state.plotPipeline}\n            config={this.props.config}\n            onClose={() => this.setState({plotPipeline: false})}/>\n        {this.state.plotFilterStep && <ChartPopup\n            key={this.state.plotFilterStep as any}\n            open={this.state.plotFilterStep}\n            data={this.state.data}\n            onClose={() => this.setState({plotFilterStep: false})}/>}\n      </div>\n    </DndContainer>\n  }\n}\n\nfunction usePipelineStepDndSort(stepIndex: number, updatePipeline: (update: Update<Pipeline>) => void) {\n  return useDndSort(\n      'step', {stepIndex},\n      ({stepIndex: from}, {stepIndex: to}) => updatePipeline(pipeline => moveItem(pipeline, from, to))\n  )\n}\n\nfunction MixerStepView(props: {\n  stepIndex: number\n  typeSelect: ReactNode\n  mixerStep: MixerStep\n  mixers: Mixers\n  updatePipeline: (update: Update<Pipeline>) => void\n  errors: ErrorsForPath\n  controls: ReactNode\n}) {\n  const {stepIndex, typeSelect, mixers, mixerStep, updatePipeline, controls} = props\n  const update = (update: Update<MixerStep>) => updatePipeline(pipeline => update(pipeline[stepIndex] as MixerStep))\n  const mixer = mixers[mixerStep.name]\n  const title = mixer ? `${mixer.channels.in} in, ${mixer.channels.out} out` : ''\n  const options = [''].concat(mixerNamesOf(mixers))\n  const nameError = props.errors({path: ['name']})\n  const dndProps = usePipelineStepDndSort(stepIndex, updatePipeline)\n  return <DndSortable {...dndProps}>\n    <Box title={\n      <>\n        <DragHandle drag={dndProps.drag} tooltip=\"Drag mixer to sort\"/>\n        <label>{typeSelect}&nbsp;&nbsp;&nbsp;&nbsp;{title}</label>\n      </>\n    }>\n      <div className=\"vertically-spaced-content\">\n        <ErrorMessage message={props.errors({path: []})}/>\n        <ErrorMessage message={props.errors({path: ['type']})}/>\n        <EnumInput\n            value={mixerStep.name}\n            options={options}\n            desc=\"name\"\n            data-tip=\"Mixer name\"\n            style={nameError ? ERROR_BACKGROUND_STYLE : undefined}\n            onChange={name => update(step => step.name = name)}/>\n        <ErrorMessage message={nameError}/>\n        <div className=\"horizontally-spaced-content\">{controls}</div>\n      </div>\n    </Box>\n  </DndSortable>\n}\n\nfunction FilterStepView(props: {\n  stepIndex: number\n  typeSelect: ReactNode\n  filterStep: FilterStep\n  filters: Filters\n  updatePipeline: (update: Update<Pipeline>) => void\n  plot: () => void\n  errors: ErrorsForPath\n  controls: ReactNode\n}) {\n  const {stepIndex, typeSelect, filterStep, filters, updatePipeline, plot, controls} = props\n  const options = [''].concat(filterNamesOf(filters))\n  const update = (update: Update<FilterStep>) => updatePipeline(pipeline => update(pipeline[stepIndex] as FilterStep))\n  const addFilter = () => update(step => step.names.push(options[0]))\n  const moveFilterUp = (index: number) => update(step => moveItemUp(step.names, index))\n  const moveFilterDown = (index: number) => update(step => moveItemDown(step.names, index))\n  const moveFilter = (fromStep: number, fromIndex: number, toStep: number, toIndex: number) =>\n      update(step => {\n            if (fromStep === toStep)\n              moveItem(step.names, fromIndex, toIndex)\n            else {\n              updatePipeline(pipeline => {\n                const from = pipeline[fromStep] as FilterStep\n                const filter = from.names.splice(fromIndex, 1)\n                const to = pipeline[toStep] as FilterStep\n                to.names.splice(toIndex, 0, ...filter)\n              })\n            }\n          }\n      )\n  const dndProps = usePipelineStepDndSort(stepIndex, updatePipeline)\n  const title = <>\n    <DragHandle drag={dndProps.drag} tooltip=\"Drag filter step to sort\"/>\n    {typeSelect}&nbsp;&nbsp;&nbsp;&nbsp;\n    <label data-tip=\"Channel number\">\n      channel\n      <IntInput\n          className=\"small-setting-input\"\n          style={{marginLeft: '5px'}}\n          value={filterStep.channel}\n          data-tip=\"Channel number\"\n          withControls={true}\n          min={0}\n          onChange={channel => update(step => step.channel = channel)}/>\n    </label>\n  </>\n  return <DndSortable {...dndProps}>\n    <Box title={title}>\n      <div className=\"vertically-spaced-content\">\n        <ErrorMessage message={props.errors({path: ['type']})}/>\n        <ErrorMessage message={props.errors({path: ['channel']})}/>\n        <ErrorMessage message={props.errors({path: []})}/>\n        <div className=\"vertically-spaced-content\">\n          {filterStep.names.map((name, index) =>\n              <FilterStepFilter\n                  stepIndex={stepIndex}\n                  key={index}\n                  index={index}\n                  name={name}\n                  options={options}\n                  setName={filterName => update(step => step.names[index] = filterName)}\n                  moveFilter={moveFilter}\n                  errors={props.errors({path: ['names', index]})}\n                  controls={\n                    <>\n                      <MdiButton\n                          icon={mdiArrowUpBold}\n                          tooltip=\"Move filter up\"\n                          smallButton={true}\n                          enabled={index > 0}\n                          onClick={() => moveFilterUp(index)}/>\n                      <MdiButton\n                          icon={mdiArrowDownBold}\n                          tooltip=\"Move filter down\"\n                          smallButton={true}\n                          enabled={index + 1 < filterStep.names.length}\n                          onClick={() => moveFilterDown(index)}/>\n                      <DeleteButton\n                          tooltip=\"Remove this filter from the list\"\n                          smallButton={true}\n                          onClick={() => update(step => step.names.splice(index, 1))}/>\n                    </>\n                  }\n              />\n          )}\n        </div>\n        <ErrorMessage message={props.errors({path: ['names']})}/>\n        <div className=\"horizontally-spaced-content\">\n          {controls}\n          <AddButton tooltip=\"Add a filter to the list\" onClick={addFilter}/>\n          <PlotButton tooltip=\"Plot response of this step\" onClick={plot}/>\n        </div>\n      </div>\n    </Box>\n  </DndSortable>\n}\n\nfunction FilterStepFilter(props: {\n  stepIndex: number\n  index: number\n  options: string[]\n  name: string\n  setName: (name: string) => void\n  moveFilter: (fromStep: number, fromIndex: number, toStep: number, toIndex: number) => void\n  errors?: string\n  controls: ReactNode\n}) {\n  const {stepIndex, index, options, name, setName, moveFilter, errors, controls} = props\n  const {isDragging, canDrop, drag, preview, drop} = useDndSort(\n      'filter',\n      {stepIndex, index},\n      ({stepIndex: fromStep, index: fromIndex}, {stepIndex: toStep, index: toIndex}) =>\n          moveFilter(fromStep, fromIndex, toStep, toIndex)\n  )\n  return <DndSortable isDragging={isDragging} canDrop={canDrop} drag={drag} preview={preview} drop={drop}>\n    <div className={`horizontally-spaced-content`}>\n      <DragHandle drag={drag} tooltip=\"Drag filter to sort\"/>\n      <EnumInput\n          value={name}\n          options={options}\n          desc={`step${stepIndex}-filter${index}`}\n          data-tip=\"Filter name\"\n          style={{\n            width: '100%',\n            ...(errors ? ERROR_BACKGROUND_STYLE : {})\n          }}\n          onChange={setName}/>\n      {controls}\n    </div>\n    <ErrorMessage message={errors}/>\n  </DndSortable>\n}","import React, {ChangeEvent, Component} from \"react\"\nimport {Set} from \"immutable\"\nimport {Box, CheckBox, doUpload, download, MdiButton, UploadButton} from \"./utilities/common-tsx\"\nimport {\n  mdiAlertCircle,\n  mdiAlphaABox,\n  mdiAlphaABoxOutline,\n  mdiCheck,\n  mdiContentSave,\n  mdiDelete,\n  mdiDownload,\n  mdiRefresh,\n  mdiUpload\n} from '@mdi/js'\nimport {Config} from \"./config\"\nimport ReactTooltip from \"react-tooltip\"\n\nexport function Files(props: {\n  currentConfigFile?: string\n  config: Config\n  setCurrentConfig: (filename: string, config: Config) => void\n}) {\n  return <div className=\"tabpanel\">\n    <FileTable title='Configs'\n               type=\"config\"\n               currentConfigFile={props.currentConfigFile}\n               config={props.config}\n               setCurrentConfig={props.setCurrentConfig}/>\n    <FileTable title='Filters' type=\"coeff\"/>\n  </div>\n}\n\ninterface FileTableProps {\n  title: string\n  type: \"config\" | \"coeff\"\n  currentConfigFile?: string\n  config?: Config\n  setCurrentConfig?: (filename: string, config: Config) => void\n}\n\ntype FileAction = 'load' | 'save' | 'upload'\nconst EMPTY_FILENAME = '' // used only for FileAction 'upload'\ntype FileStatus =\n    {\n      filename: string,\n      action: FileAction\n      success: true\n    } |\n    {\n      filename: string\n      action: FileAction\n      success: false\n      statusText: string\n    }\n\nclass FileTable extends Component<\n    FileTableProps,\n    {\n      files: ReadonlyArray<string>\n      selectedFiles: Set<string>\n      activeConfigFileName: string\n      newFileName: string\n      fileStatus: FileStatus | null\n      stopTimer: () => void\n    }> {\n\n  private readonly type: \"config\" | \"coeff\" = this.props.type\n  private readonly canLoadAndSave: boolean = this.type === \"config\"\n\n  constructor(props: FileTableProps) {\n    super(props)\n    this.update = this.update.bind(this)\n    this.loadActiveConfig = this.loadActiveConfig.bind(this)\n    this.setActiveConfig = this.setActiveConfig.bind(this)\n    this.toggleAllFileSelection = this.toggleAllFileSelection.bind(this)\n    this.toggleFileSelection = this.toggleFileSelection.bind(this)\n    this.areAllFilesSelected = this.areAllFilesSelected.bind(this)\n    this.upload = this.upload.bind(this)\n    this.delete = this.delete.bind(this)\n    this.downloadAsZip = this.downloadAsZip.bind(this)\n    this.overwriteConfig = this.overwriteConfig.bind(this)\n    this.saveConfig = this.saveConfig.bind(this)\n    this.loadConfig = this.loadConfig.bind(this)\n    this.showErrorMessage = this.showErrorMessage.bind(this)\n    this.state = {\n      files: [],\n      selectedFiles: Set(),\n      activeConfigFileName: '',\n      newFileName: 'New config.yml',\n      fileStatus: null,\n      stopTimer: () => {}\n    }\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild()\n  }\n\n  componentDidMount() {\n    this.update()\n    const timerId = setInterval(this.update, 1000)\n    this.setState({stopTimer: () => clearInterval(timerId)})\n    this.loadActiveConfig()\n  }\n\n  componentWillUnmount() {\n    this.state.stopTimer()\n  }\n\n  private update() {\n    fetch(`/api/stored${this.type}s`)\n      .then(response => response.json())\n      .then(json => this.setState((prevState) => {\n        let files = json as string[]\n        return {\n          files: files,\n          selectedFiles: prevState.selectedFiles.intersect(files)\n        }\n      }))\n  }\n\n  private async delete() {\n    const del = window.confirm(\"Delete?\\n\" + this.state.selectedFiles.join('\\n'))\n    if (!del)\n      return\n    await fetch(`/api/delete${this.type}s`, {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(this.state.selectedFiles),\n    })\n    this.setState({fileStatus: null})\n    this.update()\n  }\n\n  private async downloadAsZip() {\n    const response = await fetch(`/api/download${this.type}szip`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", },\n      body: JSON.stringify(this.state.selectedFiles),\n    })\n    const zipFile = await response.blob()\n    download(this.type + 's.zip', zipFile)\n  }\n\n  private upload(event: ChangeEvent<HTMLInputElement>) {\n    doUpload(\n        this.type,\n        event,\n        () => {\n          this.setState({\n            fileStatus: {filename: EMPTY_FILENAME, action: 'upload', success: true}\n          })\n          this.update()\n        },\n        message => this.setState({\n          fileStatus: {filename: EMPTY_FILENAME, action: 'upload', success: false, statusText: message}\n        })\n    )\n  }\n\n  private async loadConfig(name: string) {\n    try {\n      const response = await fetch(`/api/getconfigfile?name=${encodeURIComponent(name)}`)\n      if (!response.ok) {\n        this.showErrorMessage(name, 'load', await response.text())\n        return\n      }\n      const jsonConfig = await response.json()\n      this.props.setCurrentConfig!(name, jsonConfig as Config)\n      this.setState({fileStatus: {filename: name, action: 'load', success: true}})\n    } catch(e) {\n      this.showErrorMessage(name, 'load', e)\n    }\n  }\n\n  private showErrorMessage(filename: string, action: FileAction, errorMessage: string) {\n    this.setState({\n      fileStatus: {filename: filename, action: action, success: false, statusText: errorMessage}\n    })\n  }\n\n  private async loadActiveConfig() {\n    const json = await loadActiveConfig()\n    this.setState({activeConfigFileName: json.configFileName})\n  }\n\n  private setActiveConfig(name: string) {\n    fetch(\"/api/setactiveconfigfile\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({name: name})\n    }).then(() => this.loadActiveConfig())\n  }\n\n  private overwriteConfig(name: string) {\n    const del = window.confirm(\"Overwrite?\\n\" + name)\n    if (!del)\n      return\n    this.saveConfig(name)\n  }\n\n  private async saveConfig(name: string) {\n    const { config, setCurrentConfig } = this.props\n    try {\n      const response = await fetch(`/api/saveconfigfile`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\", },\n        body: JSON.stringify({filename: name, config: config}),\n      })\n      if (response.ok) {\n        setCurrentConfig!(name, config!)\n        this.setState({fileStatus: {filename: name, action: 'save', success: true}})\n        this.update()\n      } else {\n        const message = await response.text()\n        this.showErrorMessage(name, 'save', message)\n      }\n    } catch (e) {\n      this.showErrorMessage(name, 'save', e.message)\n    }\n  }\n\n  private toggleAllFileSelection() {\n    this.setState(prevState => {\n      let files = prevState.files\n      const newSelection = this.areAllFilesSelected() ? Set() : Set(files)\n      return Object.assign({}, prevState, {selectedFiles: newSelection})\n    })\n  }\n\n  private toggleFileSelection(filename: string) {\n    this.setState(prevState => {\n      const selection = prevState.selectedFiles\n      const newSelection = selection.has(filename) ? selection.delete(filename) : selection.add(filename)\n      return Object.assign({}, prevState, {selectedFiles: newSelection})\n    })\n  }\n\n  private areAllFilesSelected(): boolean {\n    const { files, selectedFiles } = this.state\n    return files.length > 1 && selectedFiles.isSuperset(files)\n  }\n\n  render() {\n    const {files, selectedFiles, fileStatus, newFileName, activeConfigFileName} = this.state\n    return (\n      <Box title={this.props.title}>\n        <div style={{\n          display: 'grid',\n          alignItems: 'center',\n          gridTemplateColumns: 'min-content min-content min-content min-content 100%',\n          gap: '5px 5px'\n        }}>\n\n          {/* Header row */}\n          <FileCheckBox\n              filename={\"all files\"}\n              checked={this.areAllFilesSelected()}\n              onChange={this.toggleAllFileSelection}/>\n          <DownloadFilesAsZipButton selectedFiles={selectedFiles} downloadAsZip={this.downloadAsZip}/>\n          <DeleteFilesButton selectedFiles={selectedFiles} delete={this.delete}/>\n          <UploadFilesButton fileStatus={fileStatus} upload={this.upload}/>\n          <div>\n            <FileStatusMessage filename={EMPTY_FILENAME} fileStatus={fileStatus}/>\n          </div>\n\n          { // File rows\n            files.flatMap(filename => [\n                  <FileCheckBox\n                      key={filename+'(1)'}\n                      filename={filename}\n                      checked={selectedFiles.has(filename)}\n                      onChange={() => this.toggleFileSelection(filename)}/>,\n                  !this.canLoadAndSave ? null : <SetActiveButton\n                      key={filename+'(2)'}\n                      active={filename === activeConfigFileName}\n                      onClick={() => this.setActiveConfig(filename)}/>,\n                  !this.canLoadAndSave ? null : <SaveButton\n                      key={filename+'(3)'}\n                      filename={filename}\n                      fileStatus={fileStatus}\n                      saveConfig={this.overwriteConfig}/>,\n                  !this.canLoadAndSave ? null : <LoadButton\n                      key={filename+'(4)'}\n                      filename={filename}\n                      fileStatus={fileStatus}\n                      loadConfig={this.loadConfig}/>,\n                  <div key={filename+'(5)'} style={this.canLoadAndSave ? {} : {gridColumn: '2 / span 4'}}>\n                    <FileDownloadButton type={this.type}\n                                        filename={filename}\n                                        isCurrentConfig={this.props.currentConfigFile === filename}/>\n                    <FileStatusMessage filename={filename} fileStatus={fileStatus}/>\n                  </div>\n                ]\n            )\n          }\n\n          { // \"Save to new config\" row\n            this.canLoadAndSave && <>\n            <div/>\n            <div/>\n            <SaveButton\n                disableReason={reasonToDisableSaveNewFileButton(newFileName, files)}\n                filename={newFileName}\n                fileStatus={fileStatus}\n                saveConfig={this.saveConfig}/>\n            <div/>\n            <div>\n              <input type='text'\n                     value={newFileName}\n                     data-tip=\"Enter a name for the new config file\"\n                     onChange={(e) => this.setState({newFileName: e.target.value})}/>\n              <FileStatusMessage filename={newFileName} fileStatus={fileStatus}/>\n            </div>\n          </>\n          }\n        </div>\n      </Box>\n    )\n  }\n}\n\nexport function loadActiveConfig(): Promise<{configFileName: string, config: Config}> {\n  return fetch(\"/api/getactiveconfigfile\")\n      .then(response => response.json())\n}\n\nfunction FileCheckBox(props: {checked: boolean, filename: string, onChange: (checked: boolean) => void}) {\n  const {checked, filename, onChange} = props\n  let tooltip = (checked ? \"Unselect \" : \"Select \") + filename\n  return <CheckBox tooltip={tooltip} checked={checked} onChange={onChange}/>\n}\n\nfunction DownloadFilesAsZipButton(props: { selectedFiles: Set<string>, downloadAsZip: () => {} }) {\n  const {selectedFiles, downloadAsZip} = props\n  const fileOrFiles = selectedFiles.size > 1 ? 'files' : 'file'\n  return <MdiButton\n      icon={mdiDownload}\n      tooltip={selectedFiles.isEmpty()\n          ? 'Download selected files<br>Select at least one file first!'\n          : `Download ${selectedFiles.size} ${fileOrFiles} as zip file`}\n      enabled={!selectedFiles.isEmpty()}\n      onClick={downloadAsZip}/>\n}\n\nfunction DeleteFilesButton(props: { selectedFiles: Set<string>, delete: () => {} }) {\n  const selectedFiles = props.selectedFiles\n  const fileOrFiles = selectedFiles.size > 1 ? 'files' : 'file'\n  return <MdiButton\n      icon={mdiDelete}\n      tooltip={selectedFiles.isEmpty()\n          ? 'Delete selected files<br>Select at least one file first!'\n          : `Delete ${selectedFiles.size} ${fileOrFiles}`}\n      enabled={!selectedFiles.isEmpty()}\n      onClick={props.delete}/>\n}\n\nfunction UploadFilesButton(props: {\n  fileStatus: FileStatus | null,\n  upload: (e: ChangeEvent<HTMLInputElement>) => void\n}) {\n  const fileStatus = props.fileStatus\n  let uploadIcon: { icon: string, className?: string } =\n      {icon: mdiUpload}\n  if (fileStatus !== null\n      && fileStatus.action === 'upload'\n      && fileStatus.filename === EMPTY_FILENAME\n      && !fileStatus.success)\n    uploadIcon = {icon: mdiAlertCircle, className: 'error-text'}\n  return <UploadButton\n      icon={uploadIcon.icon}\n      tooltip={'Upload files'}\n      onChange={props.upload}\n      className={uploadIcon.className}\n      multiple={true}/>\n}\n\nfunction SetActiveButton(props: {active: boolean, onClick: () => void}) {\n  const {active, onClick} = props\n  return <MdiButton\n      icon={active ? mdiAlphaABox : mdiAlphaABoxOutline}\n      tooltip={active ?\n          \"This config is active and will be used by default\"\n          : \"Make this config active<br> It will then be used by default\"\n      }\n      className={active ? \"highlighted-button\" : \"\"}\n      onClick={onClick}/>\n}\n\nfunction SaveButton(\n    props: {\n      filename: string,\n      disableReason?: string,\n      fileStatus: FileStatus | null,\n      saveConfig: (filename: string) => void\n    }\n) {\n  const { disableReason, filename, fileStatus, saveConfig } = props\n  let saveIcon: { icon: string, className?: string } =\n      {icon: mdiContentSave}\n  if (!disableReason && fileStatus !== null && fileStatus.action === 'save' && fileStatus.filename === filename) {\n    saveIcon = fileStatus.success ?\n        {icon: mdiCheck, className: 'success-text'}\n        : {icon: mdiAlertCircle, className: 'error-text'}\n  }\n  return <MdiButton\n      icon={saveIcon.icon}\n      className={saveIcon.className}\n      enabled={!disableReason}\n      tooltip={disableReason ? disableReason : `Save from GUI to ${filename}`}\n      onClick={() => saveConfig(filename)}/>\n}\n\nfunction LoadButton(\n    props: {\n      filename: string,\n      fileStatus: FileStatus | null,\n      loadConfig: (filename: string) => void\n    }\n) {\n  const { filename, fileStatus, loadConfig } = props\n  let loadIcon: { icon: string, className?: string } =\n      {icon: mdiRefresh}\n  if (fileStatus !== null && fileStatus.action === 'load' && fileStatus.filename === filename) {\n    loadIcon = fileStatus.success ?\n        {icon: mdiCheck, className: 'success-text'}\n        : {icon: mdiAlertCircle, className: 'error-text'}\n  }\n  return <MdiButton\n      icon={loadIcon.icon}\n      className={loadIcon.className}\n      tooltip={`Load into GUI from ${filename}`}\n      onClick={() => loadConfig(filename)}/>\n}\n\nfunction FileDownloadButton(props: { type: string, filename: string, isCurrentConfig: boolean }) {\n  const { type, filename, isCurrentConfig } = props\n  const classNames = 'button button-with-text ' + (isCurrentConfig ? 'highlighted-button' : '')\n  return <a className={classNames}\n            style={{width: 'max-content'}}\n            data-tip={'Download '+filename + (isCurrentConfig ? '<br>This is the config file currently loaded in this Editor' : '')}\n            download={filename}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`/${type}/${filename}`}>\n    {filename}\n  </a>\n}\n\nfunction FileStatusMessage(props: { filename: string, fileStatus: FileStatus | null }) {\n  const {fileStatus, filename} = props\n  if (fileStatus && !fileStatus.success && fileStatus.filename === filename)\n    return <div className={fileStatus.success ? 'success-text' : 'error-text'}>\n      Could not {fileStatus.action} config:<br/>\n      {fileStatus.statusText}\n    </div>\n  else\n    return null\n}\n\nfunction reasonToDisableSaveNewFileButton(newFileName: string, files: ReadonlyArray<string>): string | undefined {\n  if (!isValidFilename(newFileName))\n    return 'Please enter a valid file name.'\n  else if (files.includes(newFileName))\n    return `File \"${newFileName}\" already exists`\n  return undefined\n}\n\nfunction isValidFilename(newFileName: string) {\n  return newFileName.trim().length > 0\n}","import React from \"react\"\nimport \"../index.css\"\nimport {Line} from \"rc-progress\"\n\nexport function VuMeterGroup(props: { title: string, level: number[], clipped: boolean }) {\n  if (props.level.length === 0)\n    return null\n  const meters = props.level.map((value, idx) =>\n      <VuMeter key={idx} level={value} clipped={props.clipped}/>\n  )\n  return (\n      <div className=\"split-20-80\">\n        <div>{props.title}</div>\n        <div>{meters}</div>\n      </div>\n  )\n}\n\nfunction VuMeter(props: { level: number, clipped: boolean}) {\n  const color = props.clipped ? 'var(--error-text-color)' : 'var(--success-text-color)'\n  let level = props.level\n  if (level < -100) level = -100\n  if (level > 0) level = 0\n  level = level + 100\n  return <Line\n      percent={level}\n      strokeWidth={4}\n      trailWidth={4}\n      strokeColor={color}\n      strokeLinecap=\"square\"\n      trailColor=\"#E9E9E9\"\n  />\n}\n","import React from \"react\"\nimport \"../index.css\"\nimport {VuMeterGroup} from \"./vumeter\"\nimport {Box, MdiButton} from \"../utilities/common-tsx\"\nimport {mdiVolumeMedium, mdiVolumeOff} from \"@mdi/js\"\n\ntype Props = {\n    capture_rms: any\n    playback_rms: any\n    clipped: boolean\n    setMessage: (message: string) => void\n}\n\ntype State = {\n    volume: number\n    mute: boolean\n    dim: boolean\n}\n\nconst minVolume = -99\n\nexport class VolumeBox extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props)\n        this.mute = this.mute.bind(this)\n        this.dim = this.dim.bind(this)\n        this.state = {volume: 0, mute: false, dim: false}\n        this.updateVolume()\n    }\n\n    private async updateVolume() {\n        const vol_req = await fetch(\"/api/getparam/volume\")\n        let volume = 0\n        try {\n            if (vol_req.ok) {\n                volume = parseInt(await vol_req.text(), 10)\n                this.setState({volume: volume})\n            }\n        } catch (e) {}\n    }\n\n    componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>, snapshot?: any) {\n        const {volume, mute} = this.state\n        if (volume !== prevState.volume || mute !== prevState.mute)\n            this.setVolume(mute ? minVolume : volume)\n    }\n\n    private mute() {\n        this.setState(({mute}) => ({mute: !mute}))\n    }\n\n    private dim() {\n        this.setState(({volume, dim}) => ({\n            volume: volume + (dim ? 20.0 : -20.0),\n            dim: !dim\n        }))\n    }\n\n    private async setVolume(value: number) {\n        const vol_req = await fetch(\"/api/setparam/volume\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"text/plain; charset=us-ascii\"},\n            body: value.toString(),\n        })\n        const message = await vol_req.text()\n        this.props.setMessage(message)\n    }\n\n    render() {\n        const props = this.props\n        const {volume, mute, dim} = this.state\n        return <Box title={\n            <>\n                Volume\n                <div style={{display: 'inline-block', width: '5ch', textAlign: 'right', marginLeft: '5px'}}>\n                    {mute ? '' : volume+'dB'}\n                </div>\n                <MdiButton\n                    icon={mdiVolumeOff}\n                    tooltip={mute ? \"Un-Mute\" : \"Mute\"}\n                    smallButton={true}\n                    className={mute ? \"highlighted-button\" : \"\"}\n                    onClick={this.mute}/>\n                <MdiButton\n                    icon={mdiVolumeMedium}\n                    tooltip={dim ? \"Un-Dim\" : \"Dim (-20dB)\"}\n                    smallButton={true}\n                    className={dim ? \"highlighted-button\" : \"\"}\n                    enabled={dim || volume >= minVolume + 20}\n                    onClick={this.dim}/>\n            </>\n        }>\n            <VuMeterGroup title=\"In\" level={props.capture_rms} clipped={props.clipped}/>\n            <input\n                style={{width: '100%', margin: 0, padding: 0}}\n                type=\"range\"\n                min={minVolume}\n                max=\"0\"\n                value={mute ? minVolume : volume}\n                id=\"volume\"\n                onChange={e => this.setState({volume: e.target.valueAsNumber, mute: false, dim: false})}\n            />\n            <VuMeterGroup title=\"Out\" level={props.playback_rms} clipped={props.clipped}/>\n        </Box>\n    }\n}\n","import React from \"react\"\nimport \"../index.css\"\nimport isEqual from \"lodash/isEqual\"\nimport camillalogo from \"./camilladsp.svg\"\nimport {VolumeBox} from \"./volumebox\"\nimport {Box, Button} from \"../utilities/common-tsx\"\nimport {Config} from \"../config\"\nimport {loadActiveConfig} from \"../files\"\nimport {ErrorsForPath, errorsOf, noErrors} from \"../utilities/errors\"\n\n\ninterface SidePanelProps {\n  config: Config\n  setConfig: (config: Config) => void\n  setErrors: (errors: any) => void\n  currentConfigFile?: string\n  setCurrentConfig: (filename: string, config: Config) => void\n}\n\ninterface Status {\n  cdsp_status: string\n  capturesignalrms: number[]\n  playbacksignalrms: number[]\n  capturerate: number | ''\n  rateadjust: number | ''\n  bufferlevel: number | ''\n  clippedsamples: number | ''\n  cdsp_version: string\n  py_cdsp_version: string\n  backend_version: string\n}\n\nexport class SidePanel extends React.Component<\n  SidePanelProps,\n  Status & {\n    clearTimer: () => void\n    msg: string\n    clipped: boolean\n  }\n> {\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      clearTimer: () => {},\n      msg: '',\n      capturesignalrms: [],\n      playbacksignalrms: [],\n      cdsp_status: 'backend offline',\n      rateadjust: '',\n      capturerate: '',\n      bufferlevel: '',\n      clippedsamples: '',\n      clipped: false,\n      cdsp_version: '',\n      py_cdsp_version: '',\n      backend_version: ''\n    }\n    this.timer = this.timer.bind(this)\n    this.fetchConfig = this.fetchConfig.bind(this)\n    this.applyConfig = this.applyConfig.bind(this)\n  }\n\n  async componentDidMount() {\n    const intervalId = setInterval(this.timer, 500)\n    this.setState({clearTimer: () => clearInterval(intervalId)})\n    this.timer()\n    this.loadCurrentConfig()\n  }\n\n  componentWillUnmount() {\n    this.state.clearTimer()\n  }\n\n  offline_states = ['backend offline', 'offline']\n\n  private async timer() {\n    let status: Status\n    try {\n      status = await (await fetch(\"/api/status\")).json()\n    } catch (err) {\n      status = {\n        cdsp_status: 'backend offline',\n        capturesignalrms: [],\n        playbacksignalrms: [],\n        capturerate: '',\n        rateadjust: '',\n        bufferlevel: '',\n        clippedsamples: '',\n        cdsp_version: '',\n        py_cdsp_version: '',\n        backend_version: '',\n      }\n    }\n    this.setState((oldState) => ({\n      ...status,\n      clipped: oldState.clippedsamples >= 0 && status.clippedsamples > oldState.clippedsamples,\n    }))\n  }\n\n  private async fetchConfig() {\n    const conf_req = await fetch(\"/api/getconfig\")\n    const config = await conf_req.json()\n    if (config) {\n      this.setState({msg: \"OK\"})\n      this.props.setConfig(config)\n    } else {\n      this.setState({msg: \"No config received\"})\n    }\n  }\n\n  private async applyConfig() {\n    const conf_req = await fetch(\"/api/setconfig\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        filename: this.props.currentConfigFile,\n        config: this.props.config\n      }),\n    })\n    const reply = await conf_req.text()\n    this.setState({msg: reply})\n  }\n\n  async loadCurrentConfig() {\n    const json = await loadActiveConfig()\n    this.setState({msg: \"OK\"})\n    this.props.setCurrentConfig(json.configFileName, json.config)\n  }\n\n  render() {\n    const activeConfigFile = this.props.currentConfigFile\n    const cdsp_state = this.state.cdsp_status\n    return (\n      <section className=\"tabpanel\" style={{width: '250px'}}>\n        <img src={camillalogo} alt=\"graph\" width=\"100%\" height=\"100%\" />\n        {!this.offline_states.includes(cdsp_state) && <VolumeBox\n            capture_rms={this.state.capturesignalrms}\n            playback_rms={this.state.playbacksignalrms}\n            clipped={this.state.clipped}\n            setMessage={message => this.setState({msg: message})}/>}\n        <Box title=\"CamillaDSP\">\n          <div className=\"two-column-grid\">\n            <div className=\"alignRight\">State:</div><div>{cdsp_state}</div>\n            <div className=\"alignRight\">Capture samplerate:</div><div>{this.state.capturerate}</div>\n            <div className=\"alignRight\">Rate adjust:</div><div>{this.state.rateadjust}</div>\n            <div className=\"alignRight\">Clipped samples:</div><div>{this.state.clippedsamples}</div>\n            <div className=\"alignRight\">Buffer level:</div><div>{this.state.bufferlevel}</div>\n            <div className=\"alignRight\">Message:</div><div>{this.state.msg}</div>\n          </div>\n        </Box>\n        <Box title=\"Config\">\n          {activeConfigFile &&\n          <div style={{width: '220px', overflowWrap: 'break-word', textAlign: 'center', margin: '0 auto 5px'}}>\n            {activeConfigFile}\n          </div>\n          }\n          <div className=\"two-column-grid\">\n            <Button\n                text=\"Fetch from DSP\"\n                data-tip=\"Fetch active config from the running CamillaDSP process\"\n                onClick={this.fetchConfig}/>\n            <Button\n                text=\"Apply to DSP\"\n                data-tip={activeConfigFile ?\n                    `Apply config to the running CamillaDSP process, and save to ${activeConfigFile}`\n                    : `Apply config to the running CamillaDSP process`\n                }\n                onClick={this.applyConfig}/>\n          </div>\n          <ConfigCheckMessage config={this.props.config} setErrors={this.props.setErrors}/>\n        </Box>\n        <div className=\"versions\">\n          <div>CamillaDSP {this.state.cdsp_version}</div>\n          <div>pyCamillaDSP {this.state.py_cdsp_version}</div>\n          <div>Backend {this.state.backend_version}</div>\n        </div>\n      </section>\n    )\n  }\n}\n\nclass ConfigCheckMessage extends React.Component<\n    {\n      config: Config,\n      setErrors: (errors: ErrorsForPath) => void\n    },\n    { message: string }\n    > {\n\n  default_message = \"NOT CHECKED\"\n\n  constructor(props: any) {\n    super(props)\n    this.get_config_errors = this.get_config_errors.bind(this)\n    this.state = {message: this.default_message}\n  }\n\n  componentDidUpdate(prevProps: { config: Config }) {\n    if (!isEqual(prevProps.config, this.props.config))\n      this.get_config_errors(this.props.config)\n  }\n\n  private async get_config_errors(config: Config) {\n    try {\n      const request = await fetch(\"/api/validateconfig\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify(config),\n      })\n      if (request.ok) {\n        const message = await request.text()\n        this.setState({message: message})\n        this.props.setErrors(noErrors)\n      } else {\n        const json = await request.json()\n        const errors = errorsOf(json)\n        const globalErrors = errors({path:[]})\n        this.setState({message: 'Config has errors' + (globalErrors ? (':\\n' + globalErrors) : '')})\n        this.props.setErrors(errors)\n      }\n    } catch (err) {\n      this.setState({message: 'Validation failed'})\n      this.props.setErrors(noErrors)\n    }\n  }\n\n  render() {\n    const message = this.state.message\n    let textColor\n    if (message === this.default_message)\n      textColor = 'var(--neutral-text-color)'\n    else if (message === \"OK\")\n      textColor = 'var(--success-text-color)'\n    else\n      textColor = 'var(--error-text-color)'\n    return <div className=\"config-status\" style={{color: textColor, whiteSpace: 'pre-wrap'}}>{message}</div>\n  }\n}\n","/* The CSS files have to be imported in exactly this order.\n   Otherwise the custom react-tabs styles in index.css don't work */\nimport \"react-tabs/style/react-tabs.css\"\nimport \"./index.css\"\n\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport {FiltersTab} from \"./filterstab\"\nimport {DevicesTab} from \"./devicestab\"\nimport {MixersTab} from \"./mixerstab\"\nimport {PipelineTab} from \"./pipeline/pipelinetab\"\nimport {ErrorsForPath, noErrors, errorsForSubpath} from \"./utilities/errors\"\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\"\nimport ReactTooltip from \"react-tooltip\"\nimport {Files} from \"./files\"\nimport {Config, defaultConfig} from \"./config\"\nimport {defaultGuiConfig, GuiConfig} from \"./guiconfig\"\nimport {MdiIcon, Update} from \"./utilities/common-tsx\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport {mdiAlertCircle} from \"@mdi/js\"\nimport {SidePanel} from \"./sidepanel/sidepanel\"\n\nclass CamillaConfig extends React.Component<\n  unknown,\n  {\n    activetab: number\n    currentConfigFile?: string\n    guiConfig: GuiConfig\n    config: Config\n    errors: ErrorsForPath\n  }\n> {\n  constructor(props: unknown) {\n    super(props)\n    this.handleConfig = this.handleConfig.bind(this)\n    this.updateConfig = this.updateConfig.bind(this)\n    this.setCurrentConfig = this.setCurrentConfig.bind(this)\n    this.setErrors = this.setErrors.bind(this)\n    this.switchTab = this.switchTab.bind(this)\n    this.state = {\n      activetab: 0,\n      guiConfig: defaultGuiConfig(),\n      config: defaultConfig(),\n      errors: noErrors\n    }\n    fetch(\"/api/guiconfig\")\n        .then(data => data.json())\n        .then(json => this.setState({guiConfig: json}))\n  }\n\n  private handleConfig(config: Config) {\n    this.setState({config: config})\n  }\n\n  private updateConfig(update: Update<Config>) {\n    this.setState(prevState => {\n      const newConfig = cloneDeep(prevState.config)\n      update(newConfig)\n      return { config: newConfig }\n    })\n  }\n\n  private setCurrentConfig(filename: string, config: Config) {\n    this.setState({\n      currentConfigFile: filename,\n      config: config\n    })\n  }\n\n  private setErrors(errors: any) {\n    this.setState({errors: errors})\n  }\n\n  componentDidUpdate(prevProps: unknown) {\n    ReactTooltip.rebuild()\n    console.log(\"=============rebuild tooltips\")\n  }\n\n  private switchTab(index: number) {\n    this.setState({activetab: index})\n  }\n\n  render() {\n    const errors = this.state.errors\n    return <div className=\"configapp\">\n      <ReactTooltip multiline={true} />\n      <SidePanel\n          currentConfigFile={this.state.currentConfigFile}\n          config={this.state.config}\n          setConfig={this.handleConfig}\n          setErrors={this.setErrors}\n          setCurrentConfig={this.setCurrentConfig}\n      />\n      <Tabs\n          className=\"configtabs\"\n          selectedIndex={this.state.activetab}\n          onSelect={this.switchTab}\n      >\n        <TabList>\n          <Tab>Devices {errors({path: ['devices'], includeChildren: true}) && <ErrorIcon/>}</Tab>\n          <Tab>Filters {errors({path: ['filters'], includeChildren: true}) && <ErrorIcon/>}</Tab>\n          <Tab>Mixers {errors({path: ['mixers'], includeChildren: true}) && <ErrorIcon/>}</Tab>\n          <Tab>Pipeline {errors({path: ['pipeline'], includeChildren: true}) && <ErrorIcon/>}</Tab>\n          <Tab>Files</Tab>\n        </TabList>\n        <TabPanel>\n          <DevicesTab\n              devices={this.state.config.devices}\n              guiConfig={this.state.guiConfig}\n              updateConfig={this.updateConfig}\n              errors={errorsForSubpath(errors, 'devices')}\n          />\n        </TabPanel>\n        <TabPanel>\n          <FiltersTab\n              filters={this.state.config.filters}\n              samplerate={this.state.config.devices.samplerate}\n              channels={this.state.config.devices.capture.channels}\n              coeffDir={this.state.guiConfig.coeff_dir}\n              updateConfig={this.updateConfig}\n              errors={errorsForSubpath(errors, 'filters')}\n          />\n        </TabPanel>\n        <TabPanel>\n          <MixersTab\n              mixers={this.state.config.mixers}\n              updateConfig={this.updateConfig}\n              errors={errorsForSubpath(errors, 'mixers')}\n          />\n        </TabPanel>\n        <TabPanel>\n          <PipelineTab\n              config={this.state.config}\n              updateConfig={this.updateConfig}\n              errors={errorsForSubpath(errors, 'pipeline')}\n          />\n        </TabPanel>\n        <TabPanel>\n          <Files\n              currentConfigFile={this.state.currentConfigFile}\n              config={this.state.config}\n              setCurrentConfig={this.setCurrentConfig}\n          />\n        </TabPanel>\n      </Tabs>\n    </div>\n  }\n}\n\nfunction ErrorIcon(props: {}) {\n  return <MdiIcon\n      icon={mdiAlertCircle}\n      tooltip=\"There are errors on this tab\"\n      style={{color: 'var(--error-text-color)'}}/>\n}\n\nReactDOM.render(\n  <CamillaConfig />,\n  document.getElementById(\"root\")\n)\n","export interface GuiConfig {\n    hide_capture_samplerate: boolean\n    hide_silence: boolean\n    hide_capture_device: boolean\n    hide_playback_device: boolean\n    hide_rate_monitoring: boolean\n    coeff_dir: string\n}\n\nexport function defaultGuiConfig(): GuiConfig {\n    return {\n        hide_capture_samplerate: false,\n        hide_silence: false,\n        hide_capture_device: false,\n        hide_playback_device: false,\n        hide_rate_monitoring: false,\n        coeff_dir: ''\n    }\n}"],"sourceRoot":""}